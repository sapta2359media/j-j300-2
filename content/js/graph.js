/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 14881.0, "series": [{"data": [[0.0, 120.0], [0.1, 120.0], [0.2, 120.0], [0.3, 120.0], [0.4, 121.0], [0.5, 121.0], [0.6, 121.0], [0.7, 122.0], [0.8, 122.0], [0.9, 122.0], [1.0, 122.0], [1.1, 122.0], [1.2, 122.0], [1.3, 122.0], [1.4, 123.0], [1.5, 123.0], [1.6, 123.0], [1.7, 124.0], [1.8, 124.0], [1.9, 124.0], [2.0, 126.0], [2.1, 126.0], [2.2, 126.0], [2.3, 126.0], [2.4, 126.0], [2.5, 126.0], [2.6, 126.0], [2.7, 126.0], [2.8, 126.0], [2.9, 126.0], [3.0, 127.0], [3.1, 127.0], [3.2, 127.0], [3.3, 127.0], [3.4, 127.0], [3.5, 127.0], [3.6, 127.0], [3.7, 127.0], [3.8, 127.0], [3.9, 127.0], [4.0, 128.0], [4.1, 128.0], [4.2, 128.0], [4.3, 128.0], [4.4, 129.0], [4.5, 129.0], [4.6, 129.0], [4.7, 129.0], [4.8, 129.0], [4.9, 129.0], [5.0, 129.0], [5.1, 129.0], [5.2, 129.0], [5.3, 129.0], [5.4, 130.0], [5.5, 130.0], [5.6, 130.0], [5.7, 130.0], [5.8, 130.0], [5.9, 130.0], [6.0, 131.0], [6.1, 131.0], [6.2, 131.0], [6.3, 131.0], [6.4, 131.0], [6.5, 131.0], [6.6, 131.0], [6.7, 131.0], [6.8, 131.0], [6.9, 131.0], [7.0, 131.0], [7.1, 131.0], [7.2, 131.0], [7.3, 131.0], [7.4, 131.0], [7.5, 131.0], [7.6, 131.0], [7.7, 132.0], [7.8, 132.0], [7.9, 132.0], [8.0, 133.0], [8.1, 133.0], [8.2, 133.0], [8.3, 133.0], [8.4, 133.0], [8.5, 133.0], [8.6, 133.0], [8.7, 134.0], [8.8, 134.0], [8.9, 134.0], [9.0, 134.0], [9.1, 134.0], [9.2, 134.0], [9.3, 134.0], [9.4, 134.0], [9.5, 134.0], [9.6, 134.0], [9.7, 135.0], [9.8, 135.0], [9.9, 135.0], [10.0, 135.0], [10.1, 135.0], [10.2, 135.0], [10.3, 135.0], [10.4, 136.0], [10.5, 136.0], [10.6, 136.0], [10.7, 136.0], [10.8, 136.0], [10.9, 136.0], [11.0, 137.0], [11.1, 137.0], [11.2, 137.0], [11.3, 137.0], [11.4, 137.0], [11.5, 137.0], [11.6, 137.0], [11.7, 139.0], [11.8, 139.0], [11.9, 139.0], [12.0, 139.0], [12.1, 139.0], [12.2, 139.0], [12.3, 139.0], [12.4, 139.0], [12.5, 139.0], [12.6, 139.0], [12.7, 139.0], [12.8, 139.0], [12.9, 139.0], [13.0, 140.0], [13.1, 140.0], [13.2, 140.0], [13.3, 140.0], [13.4, 140.0], [13.5, 140.0], [13.6, 140.0], [13.7, 141.0], [13.8, 141.0], [13.9, 141.0], [14.0, 141.0], [14.1, 141.0], [14.2, 141.0], [14.3, 141.0], [14.4, 141.0], [14.5, 141.0], [14.6, 141.0], [14.7, 142.0], [14.8, 142.0], [14.9, 142.0], [15.0, 142.0], [15.1, 142.0], [15.2, 142.0], [15.3, 142.0], [15.4, 142.0], [15.5, 142.0], [15.6, 142.0], [15.7, 142.0], [15.8, 142.0], [15.9, 142.0], [16.0, 142.0], [16.1, 142.0], [16.2, 142.0], [16.3, 142.0], [16.4, 142.0], [16.5, 142.0], [16.6, 142.0], [16.7, 142.0], [16.8, 142.0], [16.9, 142.0], [17.0, 143.0], [17.1, 143.0], [17.2, 143.0], [17.3, 143.0], [17.4, 143.0], [17.5, 143.0], [17.6, 143.0], [17.7, 143.0], [17.8, 143.0], [17.9, 143.0], [18.0, 144.0], [18.1, 144.0], [18.2, 144.0], [18.3, 144.0], [18.4, 145.0], [18.5, 145.0], [18.6, 145.0], [18.7, 146.0], [18.8, 146.0], [18.9, 146.0], [19.0, 146.0], [19.1, 146.0], [19.2, 146.0], [19.3, 146.0], [19.4, 146.0], [19.5, 146.0], [19.6, 146.0], [19.7, 146.0], [19.8, 146.0], [19.9, 146.0], [20.0, 147.0], [20.1, 147.0], [20.2, 147.0], [20.3, 147.0], [20.4, 147.0], [20.5, 147.0], [20.6, 147.0], [20.7, 147.0], [20.8, 147.0], [20.9, 147.0], [21.0, 147.0], [21.1, 147.0], [21.2, 147.0], [21.3, 147.0], [21.4, 147.0], [21.5, 147.0], [21.6, 147.0], [21.7, 148.0], [21.8, 148.0], [21.9, 148.0], [22.0, 149.0], [22.1, 149.0], [22.2, 149.0], [22.3, 149.0], [22.4, 149.0], [22.5, 149.0], [22.6, 149.0], [22.7, 150.0], [22.8, 150.0], [22.9, 150.0], [23.0, 150.0], [23.1, 150.0], [23.2, 150.0], [23.3, 150.0], [23.4, 150.0], [23.5, 150.0], [23.6, 150.0], [23.7, 151.0], [23.8, 151.0], [23.9, 151.0], [24.0, 153.0], [24.1, 153.0], [24.2, 153.0], [24.3, 153.0], [24.4, 153.0], [24.5, 153.0], [24.6, 153.0], [24.7, 153.0], [24.8, 153.0], [24.9, 153.0], [25.0, 153.0], [25.1, 153.0], [25.2, 153.0], [25.3, 153.0], [25.4, 154.0], [25.5, 154.0], [25.6, 154.0], [25.7, 154.0], [25.8, 154.0], [25.9, 154.0], [26.0, 154.0], [26.1, 154.0], [26.2, 154.0], [26.3, 154.0], [26.4, 156.0], [26.5, 156.0], [26.6, 156.0], [26.7, 158.0], [26.8, 158.0], [26.9, 158.0], [27.0, 159.0], [27.1, 159.0], [27.2, 159.0], [27.3, 159.0], [27.4, 160.0], [27.5, 160.0], [27.6, 160.0], [27.7, 160.0], [27.8, 160.0], [27.9, 160.0], [28.0, 163.0], [28.1, 163.0], [28.2, 163.0], [28.3, 163.0], [28.4, 164.0], [28.5, 164.0], [28.6, 164.0], [28.7, 167.0], [28.8, 167.0], [28.9, 167.0], [29.0, 168.0], [29.1, 168.0], [29.2, 168.0], [29.3, 168.0], [29.4, 171.0], [29.5, 171.0], [29.6, 171.0], [29.7, 180.0], [29.8, 180.0], [29.9, 180.0], [30.0, 183.0], [30.1, 183.0], [30.2, 183.0], [30.3, 183.0], [30.4, 201.0], [30.5, 201.0], [30.6, 201.0], [30.7, 209.0], [30.8, 209.0], [30.9, 209.0], [31.0, 214.0], [31.1, 214.0], [31.2, 214.0], [31.3, 214.0], [31.4, 219.0], [31.5, 219.0], [31.6, 219.0], [31.7, 220.0], [31.8, 220.0], [31.9, 220.0], [32.0, 235.0], [32.1, 235.0], [32.2, 235.0], [32.3, 235.0], [32.4, 472.0], [32.5, 472.0], [32.6, 472.0], [32.7, 486.0], [32.8, 486.0], [32.9, 486.0], [33.0, 492.0], [33.1, 492.0], [33.2, 492.0], [33.3, 492.0], [33.4, 563.0], [33.5, 563.0], [33.6, 563.0], [33.7, 622.0], [33.8, 622.0], [33.9, 622.0], [34.0, 656.0], [34.1, 656.0], [34.2, 656.0], [34.3, 656.0], [34.4, 660.0], [34.5, 660.0], [34.6, 660.0], [34.7, 662.0], [34.8, 662.0], [34.9, 662.0], [35.0, 694.0], [35.1, 694.0], [35.2, 694.0], [35.3, 694.0], [35.4, 698.0], [35.5, 698.0], [35.6, 698.0], [35.7, 714.0], [35.8, 714.0], [35.9, 714.0], [36.0, 717.0], [36.1, 717.0], [36.2, 717.0], [36.3, 717.0], [36.4, 730.0], [36.5, 730.0], [36.6, 730.0], [36.7, 730.0], [36.8, 730.0], [36.9, 730.0], [37.0, 738.0], [37.1, 738.0], [37.2, 738.0], [37.3, 738.0], [37.4, 746.0], [37.5, 746.0], [37.6, 746.0], [37.7, 758.0], [37.8, 758.0], [37.9, 758.0], [38.0, 758.0], [38.1, 764.0], [38.2, 764.0], [38.3, 764.0], [38.4, 774.0], [38.5, 774.0], [38.6, 774.0], [38.7, 804.0], [38.8, 804.0], [38.9, 804.0], [39.0, 804.0], [39.1, 807.0], [39.2, 807.0], [39.3, 807.0], [39.4, 821.0], [39.5, 821.0], [39.6, 821.0], [39.7, 837.0], [39.8, 837.0], [39.9, 837.0], [40.0, 837.0], [40.1, 841.0], [40.2, 841.0], [40.3, 841.0], [40.4, 844.0], [40.5, 844.0], [40.6, 844.0], [40.7, 844.0], [40.8, 844.0], [40.9, 844.0], [41.0, 844.0], [41.1, 847.0], [41.2, 847.0], [41.3, 847.0], [41.4, 850.0], [41.5, 850.0], [41.6, 850.0], [41.7, 859.0], [41.8, 859.0], [41.9, 859.0], [42.0, 859.0], [42.1, 865.0], [42.2, 865.0], [42.3, 865.0], [42.4, 921.0], [42.5, 921.0], [42.6, 921.0], [42.7, 923.0], [42.8, 923.0], [42.9, 923.0], [43.0, 923.0], [43.1, 925.0], [43.2, 925.0], [43.3, 925.0], [43.4, 931.0], [43.5, 931.0], [43.6, 931.0], [43.7, 940.0], [43.8, 940.0], [43.9, 940.0], [44.0, 940.0], [44.1, 947.0], [44.2, 947.0], [44.3, 947.0], [44.4, 952.0], [44.5, 952.0], [44.6, 952.0], [44.7, 976.0], [44.8, 976.0], [44.9, 976.0], [45.0, 976.0], [45.1, 993.0], [45.2, 993.0], [45.3, 993.0], [45.4, 999.0], [45.5, 999.0], [45.6, 999.0], [45.7, 1038.0], [45.8, 1038.0], [45.9, 1038.0], [46.0, 1038.0], [46.1, 1057.0], [46.2, 1057.0], [46.3, 1057.0], [46.4, 1063.0], [46.5, 1063.0], [46.6, 1063.0], [46.7, 1064.0], [46.8, 1064.0], [46.9, 1064.0], [47.0, 1064.0], [47.1, 1080.0], [47.2, 1080.0], [47.3, 1080.0], [47.4, 1093.0], [47.5, 1093.0], [47.6, 1093.0], [47.7, 1104.0], [47.8, 1104.0], [47.9, 1104.0], [48.0, 1104.0], [48.1, 1120.0], [48.2, 1120.0], [48.3, 1120.0], [48.4, 1127.0], [48.5, 1127.0], [48.6, 1127.0], [48.7, 1132.0], [48.8, 1132.0], [48.9, 1132.0], [49.0, 1132.0], [49.1, 1156.0], [49.2, 1156.0], [49.3, 1156.0], [49.4, 1157.0], [49.5, 1157.0], [49.6, 1157.0], [49.7, 1163.0], [49.8, 1163.0], [49.9, 1163.0], [50.0, 1163.0], [50.1, 1173.0], [50.2, 1173.0], [50.3, 1173.0], [50.4, 1175.0], [50.5, 1175.0], [50.6, 1175.0], [50.7, 1177.0], [50.8, 1177.0], [50.9, 1177.0], [51.0, 1177.0], [51.1, 1180.0], [51.2, 1180.0], [51.3, 1180.0], [51.4, 1195.0], [51.5, 1195.0], [51.6, 1195.0], [51.7, 1195.0], [51.8, 1195.0], [51.9, 1195.0], [52.0, 1195.0], [52.1, 1196.0], [52.2, 1196.0], [52.3, 1196.0], [52.4, 1203.0], [52.5, 1203.0], [52.6, 1203.0], [52.7, 1213.0], [52.8, 1213.0], [52.9, 1213.0], [53.0, 1213.0], [53.1, 1221.0], [53.2, 1221.0], [53.3, 1221.0], [53.4, 1238.0], [53.5, 1238.0], [53.6, 1238.0], [53.7, 1240.0], [53.8, 1240.0], [53.9, 1240.0], [54.0, 1240.0], [54.1, 1246.0], [54.2, 1246.0], [54.3, 1246.0], [54.4, 1273.0], [54.5, 1273.0], [54.6, 1273.0], [54.7, 1276.0], [54.8, 1276.0], [54.9, 1276.0], [55.0, 1276.0], [55.1, 1293.0], [55.2, 1293.0], [55.3, 1293.0], [55.4, 1296.0], [55.5, 1296.0], [55.6, 1296.0], [55.7, 1299.0], [55.8, 1299.0], [55.9, 1299.0], [56.0, 1299.0], [56.1, 1342.0], [56.2, 1342.0], [56.3, 1342.0], [56.4, 1354.0], [56.5, 1354.0], [56.6, 1354.0], [56.7, 1367.0], [56.8, 1367.0], [56.9, 1367.0], [57.0, 1367.0], [57.1, 1371.0], [57.2, 1371.0], [57.3, 1371.0], [57.4, 1394.0], [57.5, 1394.0], [57.6, 1394.0], [57.7, 1405.0], [57.8, 1405.0], [57.9, 1405.0], [58.0, 1405.0], [58.1, 1430.0], [58.2, 1430.0], [58.3, 1430.0], [58.4, 1475.0], [58.5, 1475.0], [58.6, 1475.0], [58.7, 1567.0], [58.8, 1567.0], [58.9, 1567.0], [59.0, 1567.0], [59.1, 1600.0], [59.2, 1600.0], [59.3, 1600.0], [59.4, 1708.0], [59.5, 1708.0], [59.6, 1708.0], [59.7, 1719.0], [59.8, 1719.0], [59.9, 1719.0], [60.0, 1719.0], [60.1, 1753.0], [60.2, 1753.0], [60.3, 1753.0], [60.4, 1761.0], [60.5, 1761.0], [60.6, 1761.0], [60.7, 1826.0], [60.8, 1826.0], [60.9, 1826.0], [61.0, 1826.0], [61.1, 1951.0], [61.2, 1951.0], [61.3, 1951.0], [61.4, 1991.0], [61.5, 1991.0], [61.6, 1991.0], [61.7, 2000.0], [61.8, 2000.0], [61.9, 2000.0], [62.0, 2000.0], [62.1, 2001.0], [62.2, 2001.0], [62.3, 2001.0], [62.4, 2054.0], [62.5, 2054.0], [62.6, 2054.0], [62.7, 2119.0], [62.8, 2119.0], [62.9, 2119.0], [63.0, 2119.0], [63.1, 2293.0], [63.2, 2293.0], [63.3, 2293.0], [63.4, 2341.0], [63.5, 2341.0], [63.6, 2341.0], [63.7, 2405.0], [63.8, 2405.0], [63.9, 2405.0], [64.0, 2405.0], [64.1, 2437.0], [64.2, 2437.0], [64.3, 2437.0], [64.4, 2447.0], [64.5, 2447.0], [64.6, 2447.0], [64.7, 2455.0], [64.8, 2455.0], [64.9, 2455.0], [65.0, 2455.0], [65.1, 2457.0], [65.2, 2457.0], [65.3, 2457.0], [65.4, 2468.0], [65.5, 2468.0], [65.6, 2468.0], [65.7, 2484.0], [65.8, 2484.0], [65.9, 2484.0], [66.0, 2484.0], [66.1, 2493.0], [66.2, 2493.0], [66.3, 2493.0], [66.4, 2494.0], [66.5, 2494.0], [66.6, 2494.0], [66.7, 2495.0], [66.8, 2495.0], [66.9, 2495.0], [67.0, 2495.0], [67.1, 2524.0], [67.2, 2524.0], [67.3, 2524.0], [67.4, 2527.0], [67.5, 2527.0], [67.6, 2527.0], [67.7, 2551.0], [67.8, 2551.0], [67.9, 2551.0], [68.0, 2551.0], [68.1, 2552.0], [68.2, 2552.0], [68.3, 2552.0], [68.4, 2552.0], [68.5, 2552.0], [68.6, 2552.0], [68.7, 2553.0], [68.8, 2553.0], [68.9, 2553.0], [69.0, 2553.0], [69.1, 2560.0], [69.2, 2560.0], [69.3, 2560.0], [69.4, 2562.0], [69.5, 2562.0], [69.6, 2562.0], [69.7, 2563.0], [69.8, 2563.0], [69.9, 2563.0], [70.0, 2563.0], [70.1, 2563.0], [70.2, 2563.0], [70.3, 2563.0], [70.4, 2564.0], [70.5, 2564.0], [70.6, 2564.0], [70.7, 2567.0], [70.8, 2567.0], [70.9, 2567.0], [71.0, 2567.0], [71.1, 2579.0], [71.2, 2579.0], [71.3, 2579.0], [71.4, 2581.0], [71.5, 2581.0], [71.6, 2581.0], [71.7, 2596.0], [71.8, 2596.0], [71.9, 2596.0], [72.0, 2596.0], [72.1, 2597.0], [72.2, 2597.0], [72.3, 2597.0], [72.4, 2597.0], [72.5, 2597.0], [72.6, 2597.0], [72.7, 2598.0], [72.8, 2598.0], [72.9, 2598.0], [73.0, 2598.0], [73.1, 2606.0], [73.2, 2606.0], [73.3, 2606.0], [73.4, 2606.0], [73.5, 2606.0], [73.6, 2606.0], [73.7, 2609.0], [73.8, 2609.0], [73.9, 2609.0], [74.0, 2609.0], [74.1, 2620.0], [74.2, 2620.0], [74.3, 2620.0], [74.4, 2625.0], [74.5, 2625.0], [74.6, 2625.0], [74.7, 2631.0], [74.8, 2631.0], [74.9, 2631.0], [75.0, 2631.0], [75.1, 2633.0], [75.2, 2633.0], [75.3, 2633.0], [75.4, 2637.0], [75.5, 2637.0], [75.6, 2637.0], [75.7, 2637.0], [75.8, 2637.0], [75.9, 2637.0], [76.0, 2637.0], [76.1, 2648.0], [76.2, 2648.0], [76.3, 2648.0], [76.4, 2648.0], [76.5, 2648.0], [76.6, 2648.0], [76.7, 2651.0], [76.8, 2651.0], [76.9, 2651.0], [77.0, 2651.0], [77.1, 2655.0], [77.2, 2655.0], [77.3, 2655.0], [77.4, 2656.0], [77.5, 2656.0], [77.6, 2656.0], [77.7, 2657.0], [77.8, 2657.0], [77.9, 2657.0], [78.0, 2657.0], [78.1, 2661.0], [78.2, 2661.0], [78.3, 2661.0], [78.4, 2675.0], [78.5, 2675.0], [78.6, 2675.0], [78.7, 2675.0], [78.8, 2675.0], [78.9, 2675.0], [79.0, 2675.0], [79.1, 2682.0], [79.2, 2682.0], [79.3, 2682.0], [79.4, 2704.0], [79.5, 2704.0], [79.6, 2704.0], [79.7, 2709.0], [79.8, 2709.0], [79.9, 2709.0], [80.0, 2709.0], [80.1, 2710.0], [80.2, 2710.0], [80.3, 2710.0], [80.4, 2714.0], [80.5, 2714.0], [80.6, 2714.0], [80.7, 2717.0], [80.8, 2717.0], [80.9, 2717.0], [81.0, 2717.0], [81.1, 2721.0], [81.2, 2721.0], [81.3, 2721.0], [81.4, 2727.0], [81.5, 2727.0], [81.6, 2727.0], [81.7, 2728.0], [81.8, 2728.0], [81.9, 2728.0], [82.0, 2728.0], [82.1, 2739.0], [82.2, 2739.0], [82.3, 2739.0], [82.4, 2748.0], [82.5, 2748.0], [82.6, 2748.0], [82.7, 2750.0], [82.8, 2750.0], [82.9, 2750.0], [83.0, 2754.0], [83.1, 2754.0], [83.2, 2754.0], [83.3, 2754.0], [83.4, 2759.0], [83.5, 2759.0], [83.6, 2759.0], [83.7, 2760.0], [83.8, 2760.0], [83.9, 2760.0], [84.0, 2764.0], [84.1, 2764.0], [84.2, 2764.0], [84.3, 2764.0], [84.4, 2782.0], [84.5, 2782.0], [84.6, 2782.0], [84.7, 2786.0], [84.8, 2786.0], [84.9, 2786.0], [85.0, 2788.0], [85.1, 2788.0], [85.2, 2788.0], [85.3, 2788.0], [85.4, 2795.0], [85.5, 2795.0], [85.6, 2795.0], [85.7, 2803.0], [85.8, 2803.0], [85.9, 2803.0], [86.0, 2818.0], [86.1, 2818.0], [86.2, 2818.0], [86.3, 2818.0], [86.4, 2820.0], [86.5, 2820.0], [86.6, 2820.0], [86.7, 2821.0], [86.8, 2821.0], [86.9, 2821.0], [87.0, 2839.0], [87.1, 2839.0], [87.2, 2839.0], [87.3, 2839.0], [87.4, 2861.0], [87.5, 2861.0], [87.6, 2861.0], [87.7, 2883.0], [87.8, 2883.0], [87.9, 2883.0], [88.0, 2895.0], [88.1, 2895.0], [88.2, 2895.0], [88.3, 2895.0], [88.4, 2902.0], [88.5, 2902.0], [88.6, 2902.0], [88.7, 2921.0], [88.8, 2921.0], [88.9, 2921.0], [89.0, 2922.0], [89.1, 2922.0], [89.2, 2922.0], [89.3, 2922.0], [89.4, 2924.0], [89.5, 2924.0], [89.6, 2924.0], [89.7, 2931.0], [89.8, 2931.0], [89.9, 2931.0], [90.0, 2936.0], [90.1, 2936.0], [90.2, 2936.0], [90.3, 2936.0], [90.4, 2940.0], [90.5, 2940.0], [90.6, 2940.0], [90.7, 2959.0], [90.8, 2959.0], [90.9, 2959.0], [91.0, 2971.0], [91.1, 2971.0], [91.2, 2971.0], [91.3, 2971.0], [91.4, 2976.0], [91.5, 2976.0], [91.6, 2976.0], [91.7, 2992.0], [91.8, 2992.0], [91.9, 2992.0], [92.0, 2998.0], [92.1, 2998.0], [92.2, 2998.0], [92.3, 2998.0], [92.4, 3004.0], [92.5, 3004.0], [92.6, 3004.0], [92.7, 3015.0], [92.8, 3015.0], [92.9, 3015.0], [93.0, 3029.0], [93.1, 3029.0], [93.2, 3029.0], [93.3, 3029.0], [93.4, 3031.0], [93.5, 3031.0], [93.6, 3031.0], [93.7, 3053.0], [93.8, 3053.0], [93.9, 3053.0], [94.0, 3056.0], [94.1, 3056.0], [94.2, 3056.0], [94.3, 3056.0], [94.4, 3068.0], [94.5, 3068.0], [94.6, 3068.0], [94.7, 3069.0], [94.8, 3069.0], [94.9, 3069.0], [95.0, 3089.0], [95.1, 3089.0], [95.2, 3089.0], [95.3, 3089.0], [95.4, 3117.0], [95.5, 3117.0], [95.6, 3117.0], [95.7, 3122.0], [95.8, 3122.0], [95.9, 3122.0], [96.0, 3144.0], [96.1, 3144.0], [96.2, 3144.0], [96.3, 3144.0], [96.4, 3158.0], [96.5, 3158.0], [96.6, 3158.0], [96.7, 3208.0], [96.8, 3208.0], [96.9, 3208.0], [97.0, 3257.0], [97.1, 3257.0], [97.2, 3257.0], [97.3, 3257.0], [97.4, 11887.0], [97.5, 11887.0], [97.6, 11887.0], [97.7, 12354.0], [97.8, 12354.0], [97.9, 12354.0], [98.0, 12630.0], [98.1, 12630.0], [98.2, 12630.0], [98.3, 12630.0], [98.4, 13100.0], [98.5, 13100.0], [98.6, 13100.0], [98.7, 13230.0], [98.8, 13230.0], [98.9, 13230.0], [99.0, 13288.0], [99.1, 13288.0], [99.2, 13288.0], [99.3, 13288.0], [99.4, 13660.0], [99.5, 13660.0], [99.6, 13660.0], [99.7, 13774.0], [99.8, 13774.0], [99.9, 13774.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 26.0], [0.3, 26.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 28.0], [2.5, 28.0], [2.6, 28.0], [2.7, 28.0], [2.8, 28.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 28.0], [3.4, 28.0], [3.5, 28.0], [3.6, 28.0], [3.7, 28.0], [3.8, 28.0], [3.9, 28.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 28.0], [4.7, 28.0], [4.8, 28.0], [4.9, 28.0], [5.0, 28.0], [5.1, 28.0], [5.2, 28.0], [5.3, 28.0], [5.4, 28.0], [5.5, 28.0], [5.6, 28.0], [5.7, 28.0], [5.8, 28.0], [5.9, 28.0], [6.0, 29.0], [6.1, 29.0], [6.2, 29.0], [6.3, 29.0], [6.4, 29.0], [6.5, 29.0], [6.6, 29.0], [6.7, 29.0], [6.8, 29.0], [6.9, 29.0], [7.0, 30.0], [7.1, 30.0], [7.2, 30.0], [7.3, 30.0], [7.4, 30.0], [7.5, 30.0], [7.6, 30.0], [7.7, 30.0], [7.8, 30.0], [7.9, 30.0], [8.0, 30.0], [8.1, 30.0], [8.2, 30.0], [8.3, 30.0], [8.4, 31.0], [8.5, 31.0], [8.6, 31.0], [8.7, 31.0], [8.8, 31.0], [8.9, 31.0], [9.0, 31.0], [9.1, 31.0], [9.2, 31.0], [9.3, 31.0], [9.4, 31.0], [9.5, 31.0], [9.6, 31.0], [9.7, 31.0], [9.8, 31.0], [9.9, 31.0], [10.0, 32.0], [10.1, 32.0], [10.2, 32.0], [10.3, 32.0], [10.4, 32.0], [10.5, 32.0], [10.6, 32.0], [10.7, 32.0], [10.8, 32.0], [10.9, 32.0], [11.0, 32.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 32.0], [11.5, 32.0], [11.6, 32.0], [11.7, 32.0], [11.8, 32.0], [11.9, 32.0], [12.0, 32.0], [12.1, 32.0], [12.2, 32.0], [12.3, 32.0], [12.4, 33.0], [12.5, 33.0], [12.6, 33.0], [12.7, 33.0], [12.8, 33.0], [12.9, 33.0], [13.0, 33.0], [13.1, 33.0], [13.2, 33.0], [13.3, 33.0], [13.4, 33.0], [13.5, 33.0], [13.6, 33.0], [13.7, 34.0], [13.8, 34.0], [13.9, 34.0], [14.0, 34.0], [14.1, 34.0], [14.2, 34.0], [14.3, 34.0], [14.4, 34.0], [14.5, 34.0], [14.6, 34.0], [14.7, 34.0], [14.8, 34.0], [14.9, 34.0], [15.0, 34.0], [15.1, 34.0], [15.2, 34.0], [15.3, 34.0], [15.4, 34.0], [15.5, 34.0], [15.6, 34.0], [15.7, 34.0], [15.8, 34.0], [15.9, 34.0], [16.0, 35.0], [16.1, 35.0], [16.2, 35.0], [16.3, 35.0], [16.4, 35.0], [16.5, 35.0], [16.6, 35.0], [16.7, 35.0], [16.8, 35.0], [16.9, 35.0], [17.0, 35.0], [17.1, 35.0], [17.2, 35.0], [17.3, 35.0], [17.4, 35.0], [17.5, 35.0], [17.6, 35.0], [17.7, 35.0], [17.8, 35.0], [17.9, 35.0], [18.0, 36.0], [18.1, 36.0], [18.2, 36.0], [18.3, 36.0], [18.4, 36.0], [18.5, 36.0], [18.6, 36.0], [18.7, 36.0], [18.8, 36.0], [18.9, 36.0], [19.0, 36.0], [19.1, 36.0], [19.2, 36.0], [19.3, 36.0], [19.4, 36.0], [19.5, 36.0], [19.6, 36.0], [19.7, 36.0], [19.8, 36.0], [19.9, 36.0], [20.0, 36.0], [20.1, 36.0], [20.2, 36.0], [20.3, 36.0], [20.4, 36.0], [20.5, 36.0], [20.6, 36.0], [20.7, 37.0], [20.8, 37.0], [20.9, 37.0], [21.0, 37.0], [21.1, 37.0], [21.2, 37.0], [21.3, 37.0], [21.4, 37.0], [21.5, 37.0], [21.6, 37.0], [21.7, 37.0], [21.8, 37.0], [21.9, 37.0], [22.0, 37.0], [22.1, 37.0], [22.2, 37.0], [22.3, 37.0], [22.4, 37.0], [22.5, 37.0], [22.6, 37.0], [22.7, 37.0], [22.8, 37.0], [22.9, 37.0], [23.0, 38.0], [23.1, 38.0], [23.2, 38.0], [23.3, 38.0], [23.4, 38.0], [23.5, 38.0], [23.6, 38.0], [23.7, 38.0], [23.8, 38.0], [23.9, 38.0], [24.0, 38.0], [24.1, 38.0], [24.2, 38.0], [24.3, 38.0], [24.4, 38.0], [24.5, 38.0], [24.6, 38.0], [24.7, 39.0], [24.8, 39.0], [24.9, 39.0], [25.0, 39.0], [25.1, 39.0], [25.2, 39.0], [25.3, 39.0], [25.4, 39.0], [25.5, 39.0], [25.6, 39.0], [25.7, 39.0], [25.8, 39.0], [25.9, 39.0], [26.0, 39.0], [26.1, 39.0], [26.2, 39.0], [26.3, 39.0], [26.4, 40.0], [26.5, 40.0], [26.6, 40.0], [26.7, 41.0], [26.8, 41.0], [26.9, 41.0], [27.0, 41.0], [27.1, 41.0], [27.2, 41.0], [27.3, 41.0], [27.4, 42.0], [27.5, 42.0], [27.6, 42.0], [27.7, 42.0], [27.8, 42.0], [27.9, 42.0], [28.0, 42.0], [28.1, 48.0], [28.2, 48.0], [28.3, 48.0], [28.4, 49.0], [28.5, 49.0], [28.6, 49.0], [28.7, 50.0], [28.8, 50.0], [28.9, 50.0], [29.0, 90.0], [29.1, 90.0], [29.2, 90.0], [29.3, 90.0], [29.4, 97.0], [29.5, 97.0], [29.6, 97.0], [29.7, 464.0], [29.8, 464.0], [29.9, 464.0], [30.0, 529.0], [30.1, 529.0], [30.2, 529.0], [30.3, 529.0], [30.4, 664.0], [30.5, 664.0], [30.6, 664.0], [30.7, 688.0], [30.8, 688.0], [30.9, 688.0], [31.0, 743.0], [31.1, 743.0], [31.2, 743.0], [31.3, 743.0], [31.4, 767.0], [31.5, 767.0], [31.6, 767.0], [31.7, 777.0], [31.8, 777.0], [31.9, 777.0], [32.0, 801.0], [32.1, 801.0], [32.2, 801.0], [32.3, 801.0], [32.4, 1278.0], [32.5, 1278.0], [32.6, 1278.0], [32.7, 1285.0], [32.8, 1285.0], [32.9, 1285.0], [33.0, 1303.0], [33.1, 1303.0], [33.2, 1303.0], [33.3, 1303.0], [33.4, 1321.0], [33.5, 1321.0], [33.6, 1321.0], [33.7, 1361.0], [33.8, 1361.0], [33.9, 1361.0], [34.0, 1450.0], [34.1, 1450.0], [34.2, 1450.0], [34.3, 1450.0], [34.4, 1506.0], [34.5, 1506.0], [34.6, 1506.0], [34.7, 1509.0], [34.8, 1509.0], [34.9, 1509.0], [35.0, 1509.0], [35.1, 1518.0], [35.2, 1518.0], [35.3, 1518.0], [35.4, 1618.0], [35.5, 1618.0], [35.6, 1618.0], [35.7, 1649.0], [35.8, 1649.0], [35.9, 1649.0], [36.0, 1649.0], [36.1, 1661.0], [36.2, 1661.0], [36.3, 1661.0], [36.4, 1665.0], [36.5, 1665.0], [36.6, 1665.0], [36.7, 1764.0], [36.8, 1764.0], [36.9, 1764.0], [37.0, 1764.0], [37.1, 1797.0], [37.2, 1797.0], [37.3, 1797.0], [37.4, 1818.0], [37.5, 1818.0], [37.6, 1818.0], [37.7, 1835.0], [37.8, 1835.0], [37.9, 1835.0], [38.0, 1835.0], [38.1, 1835.0], [38.2, 1835.0], [38.3, 1835.0], [38.4, 1859.0], [38.5, 1859.0], [38.6, 1859.0], [38.7, 1863.0], [38.8, 1863.0], [38.9, 1863.0], [39.0, 1863.0], [39.1, 1870.0], [39.2, 1870.0], [39.3, 1870.0], [39.4, 1987.0], [39.5, 1987.0], [39.6, 1987.0], [39.7, 2028.0], [39.8, 2028.0], [39.9, 2028.0], [40.0, 2028.0], [40.1, 2032.0], [40.2, 2032.0], [40.3, 2032.0], [40.4, 2048.0], [40.5, 2048.0], [40.6, 2048.0], [40.7, 2195.0], [40.8, 2195.0], [40.9, 2195.0], [41.0, 2195.0], [41.1, 2217.0], [41.2, 2217.0], [41.3, 2217.0], [41.4, 2380.0], [41.5, 2380.0], [41.6, 2380.0], [41.7, 2392.0], [41.8, 2392.0], [41.9, 2392.0], [42.0, 2392.0], [42.1, 2402.0], [42.2, 2402.0], [42.3, 2402.0], [42.4, 2426.0], [42.5, 2426.0], [42.6, 2426.0], [42.7, 2440.0], [42.8, 2440.0], [42.9, 2440.0], [43.0, 2440.0], [43.1, 2453.0], [43.2, 2453.0], [43.3, 2453.0], [43.4, 2453.0], [43.5, 2453.0], [43.6, 2453.0], [43.7, 2457.0], [43.8, 2457.0], [43.9, 2457.0], [44.0, 2457.0], [44.1, 2466.0], [44.2, 2466.0], [44.3, 2466.0], [44.4, 2468.0], [44.5, 2468.0], [44.6, 2468.0], [44.7, 2469.0], [44.8, 2469.0], [44.9, 2469.0], [45.0, 2469.0], [45.1, 2472.0], [45.2, 2472.0], [45.3, 2472.0], [45.4, 2478.0], [45.5, 2478.0], [45.6, 2478.0], [45.7, 2488.0], [45.8, 2488.0], [45.9, 2488.0], [46.0, 2488.0], [46.1, 2502.0], [46.2, 2502.0], [46.3, 2502.0], [46.4, 2503.0], [46.5, 2503.0], [46.6, 2503.0], [46.7, 2508.0], [46.8, 2508.0], [46.9, 2508.0], [47.0, 2508.0], [47.1, 2519.0], [47.2, 2519.0], [47.3, 2519.0], [47.4, 2532.0], [47.5, 2532.0], [47.6, 2532.0], [47.7, 2534.0], [47.8, 2534.0], [47.9, 2534.0], [48.0, 2534.0], [48.1, 2540.0], [48.2, 2540.0], [48.3, 2540.0], [48.4, 2548.0], [48.5, 2548.0], [48.6, 2548.0], [48.7, 2548.0], [48.8, 2548.0], [48.9, 2548.0], [49.0, 2548.0], [49.1, 2563.0], [49.2, 2563.0], [49.3, 2563.0], [49.4, 2588.0], [49.5, 2588.0], [49.6, 2588.0], [49.7, 2593.0], [49.8, 2593.0], [49.9, 2593.0], [50.0, 2593.0], [50.1, 2610.0], [50.2, 2610.0], [50.3, 2610.0], [50.4, 2648.0], [50.5, 2648.0], [50.6, 2648.0], [50.7, 2652.0], [50.8, 2652.0], [50.9, 2652.0], [51.0, 2652.0], [51.1, 2662.0], [51.2, 2662.0], [51.3, 2662.0], [51.4, 2679.0], [51.5, 2679.0], [51.6, 2679.0], [51.7, 2679.0], [51.8, 2679.0], [51.9, 2679.0], [52.0, 2679.0], [52.1, 2691.0], [52.2, 2691.0], [52.3, 2691.0], [52.4, 2705.0], [52.5, 2705.0], [52.6, 2705.0], [52.7, 2746.0], [52.8, 2746.0], [52.9, 2746.0], [53.0, 2746.0], [53.1, 2773.0], [53.2, 2773.0], [53.3, 2773.0], [53.4, 2803.0], [53.5, 2803.0], [53.6, 2803.0], [53.7, 2840.0], [53.8, 2840.0], [53.9, 2840.0], [54.0, 2840.0], [54.1, 2841.0], [54.2, 2841.0], [54.3, 2841.0], [54.4, 2850.0], [54.5, 2850.0], [54.6, 2850.0], [54.7, 2884.0], [54.8, 2884.0], [54.9, 2884.0], [55.0, 2884.0], [55.1, 2887.0], [55.2, 2887.0], [55.3, 2887.0], [55.4, 2889.0], [55.5, 2889.0], [55.6, 2889.0], [55.7, 2933.0], [55.8, 2933.0], [55.9, 2933.0], [56.0, 2933.0], [56.1, 2933.0], [56.2, 2933.0], [56.3, 2933.0], [56.4, 2995.0], [56.5, 2995.0], [56.6, 2995.0], [56.7, 3041.0], [56.8, 3041.0], [56.9, 3041.0], [57.0, 3041.0], [57.1, 3052.0], [57.2, 3052.0], [57.3, 3052.0], [57.4, 3113.0], [57.5, 3113.0], [57.6, 3113.0], [57.7, 3121.0], [57.8, 3121.0], [57.9, 3121.0], [58.0, 3121.0], [58.1, 3392.0], [58.2, 3392.0], [58.3, 3392.0], [58.4, 3455.0], [58.5, 3455.0], [58.6, 3455.0], [58.7, 3473.0], [58.8, 3473.0], [58.9, 3473.0], [59.0, 3473.0], [59.1, 3476.0], [59.2, 3476.0], [59.3, 3476.0], [59.4, 3567.0], [59.5, 3567.0], [59.6, 3567.0], [59.7, 3693.0], [59.8, 3693.0], [59.9, 3693.0], [60.0, 3693.0], [60.1, 3714.0], [60.2, 3714.0], [60.3, 3714.0], [60.4, 3716.0], [60.5, 3716.0], [60.6, 3716.0], [60.7, 3731.0], [60.8, 3731.0], [60.9, 3731.0], [61.0, 3731.0], [61.1, 3807.0], [61.2, 3807.0], [61.3, 3807.0], [61.4, 3910.0], [61.5, 3910.0], [61.6, 3910.0], [61.7, 3935.0], [61.8, 3935.0], [61.9, 3935.0], [62.0, 3935.0], [62.1, 3990.0], [62.2, 3990.0], [62.3, 3990.0], [62.4, 4021.0], [62.5, 4021.0], [62.6, 4021.0], [62.7, 4389.0], [62.8, 4389.0], [62.9, 4389.0], [63.0, 4389.0], [63.1, 4738.0], [63.2, 4738.0], [63.3, 4738.0], [63.4, 4753.0], [63.5, 4753.0], [63.6, 4753.0], [63.7, 4792.0], [63.8, 4792.0], [63.9, 4792.0], [64.0, 4792.0], [64.1, 4847.0], [64.2, 4847.0], [64.3, 4847.0], [64.4, 4858.0], [64.5, 4858.0], [64.6, 4858.0], [64.7, 4860.0], [64.8, 4860.0], [64.9, 4860.0], [65.0, 4860.0], [65.1, 4986.0], [65.2, 4986.0], [65.3, 4986.0], [65.4, 5016.0], [65.5, 5016.0], [65.6, 5016.0], [65.7, 5145.0], [65.8, 5145.0], [65.9, 5145.0], [66.0, 5145.0], [66.1, 5607.0], [66.2, 5607.0], [66.3, 5607.0], [66.4, 5661.0], [66.5, 5661.0], [66.6, 5661.0], [66.7, 5695.0], [66.8, 5695.0], [66.9, 5695.0], [67.0, 5695.0], [67.1, 5739.0], [67.2, 5739.0], [67.3, 5739.0], [67.4, 5753.0], [67.5, 5753.0], [67.6, 5753.0], [67.7, 5766.0], [67.8, 5766.0], [67.9, 5766.0], [68.0, 5766.0], [68.1, 5781.0], [68.2, 5781.0], [68.3, 5781.0], [68.4, 5783.0], [68.5, 5783.0], [68.6, 5783.0], [68.7, 5784.0], [68.8, 5784.0], [68.9, 5784.0], [69.0, 5784.0], [69.1, 5820.0], [69.2, 5820.0], [69.3, 5820.0], [69.4, 5822.0], [69.5, 5822.0], [69.6, 5822.0], [69.7, 5826.0], [69.8, 5826.0], [69.9, 5826.0], [70.0, 5826.0], [70.1, 5826.0], [70.2, 5826.0], [70.3, 5826.0], [70.4, 5838.0], [70.5, 5838.0], [70.6, 5838.0], [70.7, 5851.0], [70.8, 5851.0], [70.9, 5851.0], [71.0, 5851.0], [71.1, 5862.0], [71.2, 5862.0], [71.3, 5862.0], [71.4, 5864.0], [71.5, 5864.0], [71.6, 5864.0], [71.7, 5867.0], [71.8, 5867.0], [71.9, 5867.0], [72.0, 5867.0], [72.1, 5868.0], [72.2, 5868.0], [72.3, 5868.0], [72.4, 5899.0], [72.5, 5899.0], [72.6, 5899.0], [72.7, 5906.0], [72.8, 5906.0], [72.9, 5906.0], [73.0, 5906.0], [73.1, 5911.0], [73.2, 5911.0], [73.3, 5911.0], [73.4, 5920.0], [73.5, 5920.0], [73.6, 5920.0], [73.7, 5933.0], [73.8, 5933.0], [73.9, 5933.0], [74.0, 5933.0], [74.1, 5939.0], [74.2, 5939.0], [74.3, 5939.0], [74.4, 5941.0], [74.5, 5941.0], [74.6, 5941.0], [74.7, 5964.0], [74.8, 5964.0], [74.9, 5964.0], [75.0, 5964.0], [75.1, 5980.0], [75.2, 5980.0], [75.3, 5980.0], [75.4, 5986.0], [75.5, 5986.0], [75.6, 5986.0], [75.7, 5997.0], [75.8, 5997.0], [75.9, 5997.0], [76.0, 5997.0], [76.1, 6002.0], [76.2, 6002.0], [76.3, 6002.0], [76.4, 6008.0], [76.5, 6008.0], [76.6, 6008.0], [76.7, 6032.0], [76.8, 6032.0], [76.9, 6032.0], [77.0, 6041.0], [77.1, 6041.0], [77.2, 6041.0], [77.3, 6041.0], [77.4, 6046.0], [77.5, 6046.0], [77.6, 6046.0], [77.7, 6061.0], [77.8, 6061.0], [77.9, 6061.0], [78.0, 6064.0], [78.1, 6064.0], [78.2, 6064.0], [78.3, 6064.0], [78.4, 6066.0], [78.5, 6066.0], [78.6, 6066.0], [78.7, 6076.0], [78.8, 6076.0], [78.9, 6076.0], [79.0, 6087.0], [79.1, 6087.0], [79.2, 6087.0], [79.3, 6087.0], [79.4, 6097.0], [79.5, 6097.0], [79.6, 6097.0], [79.7, 6098.0], [79.8, 6098.0], [79.9, 6098.0], [80.0, 6101.0], [80.1, 6101.0], [80.2, 6101.0], [80.3, 6101.0], [80.4, 6101.0], [80.5, 6101.0], [80.6, 6101.0], [80.7, 6114.0], [80.8, 6114.0], [80.9, 6114.0], [81.0, 6121.0], [81.1, 6121.0], [81.2, 6121.0], [81.3, 6121.0], [81.4, 6123.0], [81.5, 6123.0], [81.6, 6123.0], [81.7, 6124.0], [81.8, 6124.0], [81.9, 6124.0], [82.0, 6148.0], [82.1, 6148.0], [82.2, 6148.0], [82.3, 6148.0], [82.4, 6152.0], [82.5, 6152.0], [82.6, 6152.0], [82.7, 6186.0], [82.8, 6186.0], [82.9, 6186.0], [83.0, 6190.0], [83.1, 6190.0], [83.2, 6190.0], [83.3, 6190.0], [83.4, 6209.0], [83.5, 6209.0], [83.6, 6209.0], [83.7, 6217.0], [83.8, 6217.0], [83.9, 6217.0], [84.0, 6230.0], [84.1, 6230.0], [84.2, 6230.0], [84.3, 6230.0], [84.4, 6266.0], [84.5, 6266.0], [84.6, 6266.0], [84.7, 6286.0], [84.8, 6286.0], [84.9, 6286.0], [85.0, 6289.0], [85.1, 6289.0], [85.2, 6289.0], [85.3, 6289.0], [85.4, 6310.0], [85.5, 6310.0], [85.6, 6310.0], [85.7, 6315.0], [85.8, 6315.0], [85.9, 6315.0], [86.0, 6316.0], [86.1, 6316.0], [86.2, 6316.0], [86.3, 6316.0], [86.4, 6331.0], [86.5, 6331.0], [86.6, 6331.0], [86.7, 6334.0], [86.8, 6334.0], [86.9, 6334.0], [87.0, 6338.0], [87.1, 6338.0], [87.2, 6338.0], [87.3, 6338.0], [87.4, 6364.0], [87.5, 6364.0], [87.6, 6364.0], [87.7, 6365.0], [87.8, 6365.0], [87.9, 6365.0], [88.0, 6366.0], [88.1, 6366.0], [88.2, 6366.0], [88.3, 6366.0], [88.4, 6371.0], [88.5, 6371.0], [88.6, 6371.0], [88.7, 6420.0], [88.8, 6420.0], [88.9, 6420.0], [89.0, 6430.0], [89.1, 6430.0], [89.2, 6430.0], [89.3, 6430.0], [89.4, 6444.0], [89.5, 6444.0], [89.6, 6444.0], [89.7, 6461.0], [89.8, 6461.0], [89.9, 6461.0], [90.0, 6472.0], [90.1, 6472.0], [90.2, 6472.0], [90.3, 6472.0], [90.4, 6490.0], [90.5, 6490.0], [90.6, 6490.0], [90.7, 6503.0], [90.8, 6503.0], [90.9, 6503.0], [91.0, 6509.0], [91.1, 6509.0], [91.2, 6509.0], [91.3, 6509.0], [91.4, 6513.0], [91.5, 6513.0], [91.6, 6513.0], [91.7, 6533.0], [91.8, 6533.0], [91.9, 6533.0], [92.0, 6570.0], [92.1, 6570.0], [92.2, 6570.0], [92.3, 6570.0], [92.4, 6576.0], [92.5, 6576.0], [92.6, 6576.0], [92.7, 6579.0], [92.8, 6579.0], [92.9, 6579.0], [93.0, 6600.0], [93.1, 6600.0], [93.2, 6600.0], [93.3, 6600.0], [93.4, 6622.0], [93.5, 6622.0], [93.6, 6622.0], [93.7, 6623.0], [93.8, 6623.0], [93.9, 6623.0], [94.0, 6623.0], [94.1, 6623.0], [94.2, 6623.0], [94.3, 6623.0], [94.4, 6643.0], [94.5, 6643.0], [94.6, 6643.0], [94.7, 6668.0], [94.8, 6668.0], [94.9, 6668.0], [95.0, 6670.0], [95.1, 6670.0], [95.2, 6670.0], [95.3, 6670.0], [95.4, 6708.0], [95.5, 6708.0], [95.6, 6708.0], [95.7, 6711.0], [95.8, 6711.0], [95.9, 6711.0], [96.0, 6759.0], [96.1, 6759.0], [96.2, 6759.0], [96.3, 6759.0], [96.4, 6874.0], [96.5, 6874.0], [96.6, 6874.0], [96.7, 10739.0], [96.8, 10739.0], [96.9, 10739.0], [97.0, 10760.0], [97.1, 10760.0], [97.2, 10760.0], [97.3, 10760.0], [97.4, 10819.0], [97.5, 10819.0], [97.6, 10819.0], [97.7, 11550.0], [97.8, 11550.0], [97.9, 11550.0], [98.0, 12179.0], [98.1, 12179.0], [98.2, 12179.0], [98.3, 12179.0], [98.4, 13110.0], [98.5, 13110.0], [98.6, 13110.0], [98.7, 13304.0], [98.8, 13304.0], [98.9, 13304.0], [99.0, 14253.0], [99.1, 14253.0], [99.2, 14253.0], [99.3, 14253.0], [99.4, 14660.0], [99.5, 14660.0], [99.6, 14660.0], [99.7, 14881.0], [99.8, 14881.0], [99.9, 14881.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[0.0, 251.0], [0.1, 251.0], [0.2, 251.0], [0.3, 251.0], [0.4, 251.0], [0.5, 251.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 265.0], [1.1, 265.0], [1.2, 335.0], [1.3, 335.0], [1.4, 335.0], [1.5, 335.0], [1.6, 335.0], [1.7, 335.0], [1.8, 401.0], [1.9, 401.0], [2.0, 401.0], [2.1, 401.0], [2.2, 401.0], [2.3, 415.0], [2.4, 415.0], [2.5, 415.0], [2.6, 415.0], [2.7, 415.0], [2.8, 415.0], [2.9, 434.0], [3.0, 434.0], [3.1, 434.0], [3.2, 434.0], [3.3, 434.0], [3.4, 434.0], [3.5, 438.0], [3.6, 438.0], [3.7, 438.0], [3.8, 438.0], [3.9, 438.0], [4.0, 438.0], [4.1, 506.0], [4.2, 506.0], [4.3, 506.0], [4.4, 506.0], [4.5, 506.0], [4.6, 606.0], [4.7, 606.0], [4.8, 606.0], [4.9, 606.0], [5.0, 606.0], [5.1, 606.0], [5.2, 777.0], [5.3, 777.0], [5.4, 777.0], [5.5, 777.0], [5.6, 777.0], [5.7, 777.0], [5.8, 787.0], [5.9, 787.0], [6.0, 787.0], [6.1, 787.0], [6.2, 787.0], [6.3, 787.0], [6.4, 802.0], [6.5, 802.0], [6.6, 802.0], [6.7, 802.0], [6.8, 802.0], [6.9, 810.0], [7.0, 810.0], [7.1, 810.0], [7.2, 810.0], [7.3, 810.0], [7.4, 810.0], [7.5, 827.0], [7.6, 827.0], [7.7, 827.0], [7.8, 827.0], [7.9, 827.0], [8.0, 827.0], [8.1, 834.0], [8.2, 834.0], [8.3, 834.0], [8.4, 834.0], [8.5, 834.0], [8.6, 834.0], [8.7, 835.0], [8.8, 835.0], [8.9, 835.0], [9.0, 835.0], [9.1, 835.0], [9.2, 845.0], [9.3, 845.0], [9.4, 845.0], [9.5, 845.0], [9.6, 845.0], [9.7, 845.0], [9.8, 848.0], [9.9, 848.0], [10.0, 848.0], [10.1, 848.0], [10.2, 848.0], [10.3, 848.0], [10.4, 889.0], [10.5, 889.0], [10.6, 889.0], [10.7, 889.0], [10.8, 889.0], [10.9, 889.0], [11.0, 936.0], [11.1, 936.0], [11.2, 936.0], [11.3, 936.0], [11.4, 936.0], [11.5, 954.0], [11.6, 954.0], [11.7, 954.0], [11.8, 954.0], [11.9, 954.0], [12.0, 954.0], [12.1, 959.0], [12.2, 959.0], [12.3, 959.0], [12.4, 959.0], [12.5, 959.0], [12.6, 959.0], [12.7, 1006.0], [12.8, 1006.0], [12.9, 1006.0], [13.0, 1006.0], [13.1, 1006.0], [13.2, 1006.0], [13.3, 1059.0], [13.4, 1059.0], [13.5, 1059.0], [13.6, 1059.0], [13.7, 1059.0], [13.8, 1247.0], [13.9, 1247.0], [14.0, 1247.0], [14.1, 1247.0], [14.2, 1247.0], [14.3, 1247.0], [14.4, 1254.0], [14.5, 1254.0], [14.6, 1254.0], [14.7, 1254.0], [14.8, 1254.0], [14.9, 1254.0], [15.0, 1272.0], [15.1, 1272.0], [15.2, 1272.0], [15.3, 1272.0], [15.4, 1272.0], [15.5, 1272.0], [15.6, 1279.0], [15.7, 1279.0], [15.8, 1279.0], [15.9, 1279.0], [16.0, 1279.0], [16.1, 1304.0], [16.2, 1304.0], [16.3, 1304.0], [16.4, 1304.0], [16.5, 1304.0], [16.6, 1304.0], [16.7, 1314.0], [16.8, 1314.0], [16.9, 1314.0], [17.0, 1314.0], [17.1, 1314.0], [17.2, 1314.0], [17.3, 1323.0], [17.4, 1323.0], [17.5, 1323.0], [17.6, 1323.0], [17.7, 1323.0], [17.8, 1323.0], [17.9, 1416.0], [18.0, 1416.0], [18.1, 1416.0], [18.2, 1416.0], [18.3, 1416.0], [18.4, 1467.0], [18.5, 1467.0], [18.6, 1467.0], [18.7, 1467.0], [18.8, 1467.0], [18.9, 1467.0], [19.0, 1472.0], [19.1, 1472.0], [19.2, 1472.0], [19.3, 1472.0], [19.4, 1472.0], [19.5, 1472.0], [19.6, 1473.0], [19.7, 1473.0], [19.8, 1473.0], [19.9, 1473.0], [20.0, 1473.0], [20.1, 1473.0], [20.2, 1527.0], [20.3, 1527.0], [20.4, 1527.0], [20.5, 1527.0], [20.6, 1527.0], [20.7, 1572.0], [20.8, 1572.0], [20.9, 1572.0], [21.0, 1572.0], [21.1, 1572.0], [21.2, 1572.0], [21.3, 1616.0], [21.4, 1616.0], [21.5, 1616.0], [21.6, 1616.0], [21.7, 1616.0], [21.8, 1616.0], [21.9, 1620.0], [22.0, 1620.0], [22.1, 1620.0], [22.2, 1620.0], [22.3, 1620.0], [22.4, 1620.0], [22.5, 1623.0], [22.6, 1623.0], [22.7, 1623.0], [22.8, 1623.0], [22.9, 1623.0], [23.0, 1669.0], [23.1, 1669.0], [23.2, 1669.0], [23.3, 1669.0], [23.4, 1669.0], [23.5, 1669.0], [23.6, 1732.0], [23.7, 1732.0], [23.8, 1732.0], [23.9, 1732.0], [24.0, 1732.0], [24.1, 1732.0], [24.2, 1759.0], [24.3, 1759.0], [24.4, 1759.0], [24.5, 1759.0], [24.6, 1759.0], [24.7, 1759.0], [24.8, 1762.0], [24.9, 1762.0], [25.0, 1762.0], [25.1, 1762.0], [25.2, 1762.0], [25.3, 1786.0], [25.4, 1786.0], [25.5, 1786.0], [25.6, 1786.0], [25.7, 1786.0], [25.8, 1786.0], [25.9, 1805.0], [26.0, 1805.0], [26.1, 1805.0], [26.2, 1805.0], [26.3, 1805.0], [26.4, 1805.0], [26.5, 1807.0], [26.6, 1807.0], [26.7, 1807.0], [26.8, 1807.0], [26.9, 1807.0], [27.0, 1807.0], [27.1, 1820.0], [27.2, 1820.0], [27.3, 1820.0], [27.4, 1820.0], [27.5, 1820.0], [27.6, 1836.0], [27.7, 1836.0], [27.8, 1836.0], [27.9, 1836.0], [28.0, 1836.0], [28.1, 1836.0], [28.2, 1836.0], [28.3, 1836.0], [28.4, 1836.0], [28.5, 1836.0], [28.6, 1836.0], [28.7, 1836.0], [28.8, 1854.0], [28.9, 1854.0], [29.0, 1854.0], [29.1, 1854.0], [29.2, 1854.0], [29.3, 1854.0], [29.4, 1958.0], [29.5, 1958.0], [29.6, 1958.0], [29.7, 1958.0], [29.8, 1958.0], [29.9, 1991.0], [30.0, 1991.0], [30.1, 1991.0], [30.2, 1991.0], [30.3, 1991.0], [30.4, 1991.0], [30.5, 2004.0], [30.6, 2004.0], [30.7, 2004.0], [30.8, 2004.0], [30.9, 2004.0], [31.0, 2004.0], [31.1, 2009.0], [31.2, 2009.0], [31.3, 2009.0], [31.4, 2009.0], [31.5, 2009.0], [31.6, 2009.0], [31.7, 2020.0], [31.8, 2020.0], [31.9, 2020.0], [32.0, 2020.0], [32.1, 2020.0], [32.2, 2071.0], [32.3, 2071.0], [32.4, 2071.0], [32.5, 2071.0], [32.6, 2071.0], [32.7, 2071.0], [32.8, 2161.0], [32.9, 2161.0], [33.0, 2161.0], [33.1, 2161.0], [33.2, 2161.0], [33.3, 2161.0], [33.4, 2180.0], [33.5, 2180.0], [33.6, 2180.0], [33.7, 2180.0], [33.8, 2180.0], [33.9, 2180.0], [34.0, 2348.0], [34.1, 2348.0], [34.2, 2348.0], [34.3, 2348.0], [34.4, 2348.0], [34.5, 2356.0], [34.6, 2356.0], [34.7, 2356.0], [34.8, 2356.0], [34.9, 2356.0], [35.0, 2356.0], [35.1, 2407.0], [35.2, 2407.0], [35.3, 2407.0], [35.4, 2407.0], [35.5, 2407.0], [35.6, 2407.0], [35.7, 2416.0], [35.8, 2416.0], [35.9, 2416.0], [36.0, 2416.0], [36.1, 2416.0], [36.2, 2416.0], [36.3, 2417.0], [36.4, 2417.0], [36.5, 2417.0], [36.6, 2417.0], [36.7, 2417.0], [36.8, 2430.0], [36.9, 2430.0], [37.0, 2430.0], [37.1, 2430.0], [37.2, 2430.0], [37.3, 2430.0], [37.4, 2435.0], [37.5, 2435.0], [37.6, 2435.0], [37.7, 2435.0], [37.8, 2435.0], [37.9, 2435.0], [38.0, 2436.0], [38.1, 2436.0], [38.2, 2436.0], [38.3, 2436.0], [38.4, 2436.0], [38.5, 2436.0], [38.6, 2437.0], [38.7, 2437.0], [38.8, 2437.0], [38.9, 2437.0], [39.0, 2437.0], [39.1, 2495.0], [39.2, 2495.0], [39.3, 2495.0], [39.4, 2495.0], [39.5, 2495.0], [39.6, 2495.0], [39.7, 2502.0], [39.8, 2502.0], [39.9, 2502.0], [40.0, 2502.0], [40.1, 2502.0], [40.2, 2502.0], [40.3, 2510.0], [40.4, 2510.0], [40.5, 2510.0], [40.6, 2510.0], [40.7, 2510.0], [40.8, 2510.0], [40.9, 2614.0], [41.0, 2614.0], [41.1, 2614.0], [41.2, 2614.0], [41.3, 2614.0], [41.4, 2644.0], [41.5, 2644.0], [41.6, 2644.0], [41.7, 2644.0], [41.8, 2644.0], [41.9, 2644.0], [42.0, 2672.0], [42.1, 2672.0], [42.2, 2672.0], [42.3, 2672.0], [42.4, 2672.0], [42.5, 2672.0], [42.6, 2716.0], [42.7, 2716.0], [42.8, 2716.0], [42.9, 2716.0], [43.0, 2716.0], [43.1, 2716.0], [43.2, 2751.0], [43.3, 2751.0], [43.4, 2751.0], [43.5, 2751.0], [43.6, 2751.0], [43.7, 2801.0], [43.8, 2801.0], [43.9, 2801.0], [44.0, 2801.0], [44.1, 2801.0], [44.2, 2801.0], [44.3, 2837.0], [44.4, 2837.0], [44.5, 2837.0], [44.6, 2837.0], [44.7, 2837.0], [44.8, 2837.0], [44.9, 2845.0], [45.0, 2845.0], [45.1, 2845.0], [45.2, 2845.0], [45.3, 2845.0], [45.4, 2845.0], [45.5, 2852.0], [45.6, 2852.0], [45.7, 2852.0], [45.8, 2852.0], [45.9, 2852.0], [46.0, 2878.0], [46.1, 2878.0], [46.2, 2878.0], [46.3, 2878.0], [46.4, 2878.0], [46.5, 2878.0], [46.6, 2883.0], [46.7, 2883.0], [46.8, 2883.0], [46.9, 2883.0], [47.0, 2883.0], [47.1, 2883.0], [47.2, 2890.0], [47.3, 2890.0], [47.4, 2890.0], [47.5, 2890.0], [47.6, 2890.0], [47.7, 2890.0], [47.8, 2890.0], [47.9, 2890.0], [48.0, 2890.0], [48.1, 2890.0], [48.2, 2890.0], [48.3, 2911.0], [48.4, 2911.0], [48.5, 2911.0], [48.6, 2911.0], [48.7, 2911.0], [48.8, 2911.0], [48.9, 2914.0], [49.0, 2914.0], [49.1, 2914.0], [49.2, 2914.0], [49.3, 2914.0], [49.4, 2914.0], [49.5, 2921.0], [49.6, 2921.0], [49.7, 2921.0], [49.8, 2921.0], [49.9, 2921.0], [50.0, 2921.0], [50.1, 2929.0], [50.2, 2929.0], [50.3, 2929.0], [50.4, 2929.0], [50.5, 2929.0], [50.6, 2936.0], [50.7, 2936.0], [50.8, 2936.0], [50.9, 2936.0], [51.0, 2936.0], [51.1, 2936.0], [51.2, 2936.0], [51.3, 2936.0], [51.4, 2936.0], [51.5, 2936.0], [51.6, 2936.0], [51.7, 2936.0], [51.8, 2937.0], [51.9, 2937.0], [52.0, 2937.0], [52.1, 2937.0], [52.2, 2937.0], [52.3, 2945.0], [52.4, 2945.0], [52.5, 2945.0], [52.6, 2945.0], [52.7, 2945.0], [52.8, 2945.0], [52.9, 2962.0], [53.0, 2962.0], [53.1, 2962.0], [53.2, 2962.0], [53.3, 2962.0], [53.4, 2962.0], [53.5, 2976.0], [53.6, 2976.0], [53.7, 2976.0], [53.8, 2976.0], [53.9, 2976.0], [54.0, 2976.0], [54.1, 3011.0], [54.2, 3011.0], [54.3, 3011.0], [54.4, 3011.0], [54.5, 3011.0], [54.6, 3022.0], [54.7, 3022.0], [54.8, 3022.0], [54.9, 3022.0], [55.0, 3022.0], [55.1, 3022.0], [55.2, 3043.0], [55.3, 3043.0], [55.4, 3043.0], [55.5, 3043.0], [55.6, 3043.0], [55.7, 3043.0], [55.8, 3065.0], [55.9, 3065.0], [56.0, 3065.0], [56.1, 3065.0], [56.2, 3065.0], [56.3, 3065.0], [56.4, 3071.0], [56.5, 3071.0], [56.6, 3071.0], [56.7, 3071.0], [56.8, 3071.0], [56.9, 3089.0], [57.0, 3089.0], [57.1, 3089.0], [57.2, 3089.0], [57.3, 3089.0], [57.4, 3089.0], [57.5, 3091.0], [57.6, 3091.0], [57.7, 3091.0], [57.8, 3091.0], [57.9, 3091.0], [58.0, 3091.0], [58.1, 3094.0], [58.2, 3094.0], [58.3, 3094.0], [58.4, 3094.0], [58.5, 3094.0], [58.6, 3094.0], [58.7, 3103.0], [58.8, 3103.0], [58.9, 3103.0], [59.0, 3103.0], [59.1, 3103.0], [59.2, 3104.0], [59.3, 3104.0], [59.4, 3104.0], [59.5, 3104.0], [59.6, 3104.0], [59.7, 3104.0], [59.8, 3112.0], [59.9, 3112.0], [60.0, 3112.0], [60.1, 3112.0], [60.2, 3112.0], [60.3, 3112.0], [60.4, 3118.0], [60.5, 3118.0], [60.6, 3118.0], [60.7, 3118.0], [60.8, 3118.0], [60.9, 3118.0], [61.0, 3127.0], [61.1, 3127.0], [61.2, 3127.0], [61.3, 3127.0], [61.4, 3127.0], [61.5, 3130.0], [61.6, 3130.0], [61.7, 3130.0], [61.8, 3130.0], [61.9, 3130.0], [62.0, 3130.0], [62.1, 3142.0], [62.2, 3142.0], [62.3, 3142.0], [62.4, 3142.0], [62.5, 3142.0], [62.6, 3142.0], [62.7, 3157.0], [62.8, 3157.0], [62.9, 3157.0], [63.0, 3157.0], [63.1, 3157.0], [63.2, 3157.0], [63.3, 3161.0], [63.4, 3161.0], [63.5, 3161.0], [63.6, 3161.0], [63.7, 3161.0], [63.8, 3168.0], [63.9, 3168.0], [64.0, 3168.0], [64.1, 3168.0], [64.2, 3168.0], [64.3, 3168.0], [64.4, 3177.0], [64.5, 3177.0], [64.6, 3177.0], [64.7, 3177.0], [64.8, 3177.0], [64.9, 3177.0], [65.0, 3178.0], [65.1, 3178.0], [65.2, 3178.0], [65.3, 3178.0], [65.4, 3178.0], [65.5, 3178.0], [65.6, 3179.0], [65.7, 3179.0], [65.8, 3179.0], [65.9, 3179.0], [66.0, 3179.0], [66.1, 3182.0], [66.2, 3182.0], [66.3, 3182.0], [66.4, 3182.0], [66.5, 3182.0], [66.6, 3182.0], [66.7, 3190.0], [66.8, 3190.0], [66.9, 3190.0], [67.0, 3190.0], [67.1, 3190.0], [67.2, 3190.0], [67.3, 3197.0], [67.4, 3197.0], [67.5, 3197.0], [67.6, 3197.0], [67.7, 3197.0], [67.8, 3197.0], [67.9, 3201.0], [68.0, 3201.0], [68.1, 3201.0], [68.2, 3201.0], [68.3, 3201.0], [68.4, 3203.0], [68.5, 3203.0], [68.6, 3203.0], [68.7, 3203.0], [68.8, 3203.0], [68.9, 3203.0], [69.0, 3210.0], [69.1, 3210.0], [69.2, 3210.0], [69.3, 3210.0], [69.4, 3210.0], [69.5, 3210.0], [69.6, 3211.0], [69.7, 3211.0], [69.8, 3211.0], [69.9, 3211.0], [70.0, 3211.0], [70.1, 3211.0], [70.2, 3212.0], [70.3, 3212.0], [70.4, 3212.0], [70.5, 3212.0], [70.6, 3212.0], [70.7, 3238.0], [70.8, 3238.0], [70.9, 3238.0], [71.0, 3238.0], [71.1, 3238.0], [71.2, 3238.0], [71.3, 3239.0], [71.4, 3239.0], [71.5, 3239.0], [71.6, 3239.0], [71.7, 3239.0], [71.8, 3239.0], [71.9, 3248.0], [72.0, 3248.0], [72.1, 3248.0], [72.2, 3248.0], [72.3, 3248.0], [72.4, 3248.0], [72.5, 3259.0], [72.6, 3259.0], [72.7, 3259.0], [72.8, 3259.0], [72.9, 3259.0], [73.0, 3284.0], [73.1, 3284.0], [73.2, 3284.0], [73.3, 3284.0], [73.4, 3284.0], [73.5, 3284.0], [73.6, 3305.0], [73.7, 3305.0], [73.8, 3305.0], [73.9, 3305.0], [74.0, 3305.0], [74.1, 3305.0], [74.2, 3334.0], [74.3, 3334.0], [74.4, 3334.0], [74.5, 3334.0], [74.6, 3334.0], [74.7, 3334.0], [74.8, 3336.0], [74.9, 3336.0], [75.0, 3336.0], [75.1, 3336.0], [75.2, 3336.0], [75.3, 3341.0], [75.4, 3341.0], [75.5, 3341.0], [75.6, 3341.0], [75.7, 3341.0], [75.8, 3341.0], [75.9, 3356.0], [76.0, 3356.0], [76.1, 3356.0], [76.2, 3356.0], [76.3, 3356.0], [76.4, 3356.0], [76.5, 3361.0], [76.6, 3361.0], [76.7, 3361.0], [76.8, 3361.0], [76.9, 3361.0], [77.0, 3361.0], [77.1, 3374.0], [77.2, 3374.0], [77.3, 3374.0], [77.4, 3374.0], [77.5, 3374.0], [77.6, 3406.0], [77.7, 3406.0], [77.8, 3406.0], [77.9, 3406.0], [78.0, 3406.0], [78.1, 3406.0], [78.2, 3423.0], [78.3, 3423.0], [78.4, 3423.0], [78.5, 3423.0], [78.6, 3423.0], [78.7, 3423.0], [78.8, 3424.0], [78.9, 3424.0], [79.0, 3424.0], [79.1, 3424.0], [79.2, 3424.0], [79.3, 3424.0], [79.4, 3428.0], [79.5, 3428.0], [79.6, 3428.0], [79.7, 3428.0], [79.8, 3428.0], [79.9, 3431.0], [80.0, 3431.0], [80.1, 3431.0], [80.2, 3431.0], [80.3, 3431.0], [80.4, 3431.0], [80.5, 3451.0], [80.6, 3451.0], [80.7, 3451.0], [80.8, 3451.0], [80.9, 3451.0], [81.0, 3451.0], [81.1, 3458.0], [81.2, 3458.0], [81.3, 3458.0], [81.4, 3458.0], [81.5, 3458.0], [81.6, 3458.0], [81.7, 3488.0], [81.8, 3488.0], [81.9, 3488.0], [82.0, 3488.0], [82.1, 3488.0], [82.2, 3489.0], [82.3, 3489.0], [82.4, 3489.0], [82.5, 3489.0], [82.6, 3489.0], [82.7, 3489.0], [82.8, 3489.0], [82.9, 3489.0], [83.0, 3489.0], [83.1, 3489.0], [83.2, 3489.0], [83.3, 3489.0], [83.4, 3499.0], [83.5, 3499.0], [83.6, 3499.0], [83.7, 3499.0], [83.8, 3499.0], [83.9, 3499.0], [84.0, 3510.0], [84.1, 3510.0], [84.2, 3510.0], [84.3, 3510.0], [84.4, 3510.0], [84.5, 3521.0], [84.6, 3521.0], [84.7, 3521.0], [84.8, 3521.0], [84.9, 3521.0], [85.0, 3521.0], [85.1, 3531.0], [85.2, 3531.0], [85.3, 3531.0], [85.4, 3531.0], [85.5, 3531.0], [85.6, 3531.0], [85.7, 3539.0], [85.8, 3539.0], [85.9, 3539.0], [86.0, 3539.0], [86.1, 3539.0], [86.2, 3539.0], [86.3, 3546.0], [86.4, 3546.0], [86.5, 3546.0], [86.6, 3546.0], [86.7, 3546.0], [86.8, 3549.0], [86.9, 3549.0], [87.0, 3549.0], [87.1, 3549.0], [87.2, 3549.0], [87.3, 3549.0], [87.4, 3550.0], [87.5, 3550.0], [87.6, 3550.0], [87.7, 3550.0], [87.8, 3550.0], [87.9, 3550.0], [88.0, 3572.0], [88.1, 3572.0], [88.2, 3572.0], [88.3, 3572.0], [88.4, 3572.0], [88.5, 3572.0], [88.6, 3584.0], [88.7, 3584.0], [88.8, 3584.0], [88.9, 3584.0], [89.0, 3584.0], [89.1, 3641.0], [89.2, 3641.0], [89.3, 3641.0], [89.4, 3641.0], [89.5, 3641.0], [89.6, 3641.0], [89.7, 3663.0], [89.8, 3663.0], [89.9, 3663.0], [90.0, 3663.0], [90.1, 3663.0], [90.2, 3663.0], [90.3, 3669.0], [90.4, 3669.0], [90.5, 3669.0], [90.6, 3669.0], [90.7, 3669.0], [90.8, 3669.0], [90.9, 3689.0], [91.0, 3689.0], [91.1, 3689.0], [91.2, 3689.0], [91.3, 3689.0], [91.4, 3718.0], [91.5, 3718.0], [91.6, 3718.0], [91.7, 3718.0], [91.8, 3718.0], [91.9, 3718.0], [92.0, 3737.0], [92.1, 3737.0], [92.2, 3737.0], [92.3, 3737.0], [92.4, 3737.0], [92.5, 3737.0], [92.6, 3760.0], [92.7, 3760.0], [92.8, 3760.0], [92.9, 3760.0], [93.0, 3760.0], [93.1, 3760.0], [93.2, 3781.0], [93.3, 3781.0], [93.4, 3781.0], [93.5, 3781.0], [93.6, 3781.0], [93.7, 3807.0], [93.8, 3807.0], [93.9, 3807.0], [94.0, 3807.0], [94.1, 3807.0], [94.2, 3807.0], [94.3, 3840.0], [94.4, 3840.0], [94.5, 3840.0], [94.6, 3840.0], [94.7, 3840.0], [94.8, 3840.0], [94.9, 3840.0], [95.0, 3840.0], [95.1, 3840.0], [95.2, 3840.0], [95.3, 3840.0], [95.4, 3840.0], [95.5, 3841.0], [95.6, 3841.0], [95.7, 3841.0], [95.8, 3841.0], [95.9, 3841.0], [96.0, 3869.0], [96.1, 3869.0], [96.2, 3869.0], [96.3, 3869.0], [96.4, 3869.0], [96.5, 3869.0], [96.6, 3897.0], [96.7, 3897.0], [96.8, 3897.0], [96.9, 3897.0], [97.0, 3897.0], [97.1, 3897.0], [97.2, 3936.0], [97.3, 3936.0], [97.4, 3936.0], [97.5, 3936.0], [97.6, 3936.0], [97.7, 3936.0], [97.8, 10447.0], [97.9, 10447.0], [98.0, 10447.0], [98.1, 10447.0], [98.2, 10447.0], [98.3, 11791.0], [98.4, 11791.0], [98.5, 11791.0], [98.6, 11791.0], [98.7, 11791.0], [98.8, 11791.0], [98.9, 12705.0], [99.0, 12705.0], [99.1, 12705.0], [99.2, 12705.0], [99.3, 12705.0], [99.4, 12705.0], [99.5, 12937.0], [99.6, 12937.0], [99.7, 12937.0], [99.8, 12937.0], [99.9, 12937.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 26.0], [0.3, 26.0], [0.4, 26.0], [0.5, 26.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 29.0], [1.9, 29.0], [2.0, 29.0], [2.1, 29.0], [2.2, 29.0], [2.3, 29.0], [2.4, 29.0], [2.5, 29.0], [2.6, 29.0], [2.7, 29.0], [2.8, 29.0], [2.9, 29.0], [3.0, 29.0], [3.1, 29.0], [3.2, 29.0], [3.3, 29.0], [3.4, 29.0], [3.5, 30.0], [3.6, 30.0], [3.7, 30.0], [3.8, 30.0], [3.9, 30.0], [4.0, 30.0], [4.1, 30.0], [4.2, 30.0], [4.3, 30.0], [4.4, 30.0], [4.5, 30.0], [4.6, 30.0], [4.7, 30.0], [4.8, 30.0], [4.9, 30.0], [5.0, 30.0], [5.1, 30.0], [5.2, 30.0], [5.3, 30.0], [5.4, 30.0], [5.5, 30.0], [5.6, 30.0], [5.7, 30.0], [5.8, 31.0], [5.9, 31.0], [6.0, 31.0], [6.1, 31.0], [6.2, 31.0], [6.3, 31.0], [6.4, 32.0], [6.5, 32.0], [6.6, 32.0], [6.7, 32.0], [6.8, 32.0], [6.9, 32.0], [7.0, 32.0], [7.1, 32.0], [7.2, 32.0], [7.3, 32.0], [7.4, 32.0], [7.5, 32.0], [7.6, 32.0], [7.7, 32.0], [7.8, 32.0], [7.9, 32.0], [8.0, 32.0], [8.1, 32.0], [8.2, 32.0], [8.3, 32.0], [8.4, 32.0], [8.5, 32.0], [8.6, 32.0], [8.7, 32.0], [8.8, 32.0], [8.9, 32.0], [9.0, 32.0], [9.1, 32.0], [9.2, 32.0], [9.3, 32.0], [9.4, 32.0], [9.5, 32.0], [9.6, 32.0], [9.7, 32.0], [9.8, 33.0], [9.9, 33.0], [10.0, 33.0], [10.1, 33.0], [10.2, 33.0], [10.3, 33.0], [10.4, 33.0], [10.5, 33.0], [10.6, 33.0], [10.7, 33.0], [10.8, 33.0], [10.9, 33.0], [11.0, 34.0], [11.1, 34.0], [11.2, 34.0], [11.3, 34.0], [11.4, 34.0], [11.5, 34.0], [11.6, 34.0], [11.7, 34.0], [11.8, 34.0], [11.9, 34.0], [12.0, 34.0], [12.1, 34.0], [12.2, 34.0], [12.3, 34.0], [12.4, 34.0], [12.5, 34.0], [12.6, 34.0], [12.7, 35.0], [12.8, 35.0], [12.9, 35.0], [13.0, 35.0], [13.1, 35.0], [13.2, 35.0], [13.3, 35.0], [13.4, 35.0], [13.5, 35.0], [13.6, 35.0], [13.7, 35.0], [13.8, 35.0], [13.9, 35.0], [14.0, 35.0], [14.1, 35.0], [14.2, 35.0], [14.3, 35.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 36.0], [14.8, 36.0], [14.9, 36.0], [15.0, 36.0], [15.1, 36.0], [15.2, 36.0], [15.3, 36.0], [15.4, 36.0], [15.5, 36.0], [15.6, 37.0], [15.7, 37.0], [15.8, 37.0], [15.9, 37.0], [16.0, 37.0], [16.1, 37.0], [16.2, 37.0], [16.3, 37.0], [16.4, 37.0], [16.5, 37.0], [16.6, 37.0], [16.7, 38.0], [16.8, 38.0], [16.9, 38.0], [17.0, 38.0], [17.1, 38.0], [17.2, 38.0], [17.3, 38.0], [17.4, 38.0], [17.5, 38.0], [17.6, 38.0], [17.7, 38.0], [17.8, 38.0], [17.9, 38.0], [18.0, 38.0], [18.1, 38.0], [18.2, 38.0], [18.3, 38.0], [18.4, 40.0], [18.5, 40.0], [18.6, 40.0], [18.7, 40.0], [18.8, 40.0], [18.9, 40.0], [19.0, 41.0], [19.1, 41.0], [19.2, 41.0], [19.3, 41.0], [19.4, 41.0], [19.5, 41.0], [19.6, 41.0], [19.7, 41.0], [19.8, 41.0], [19.9, 41.0], [20.0, 41.0], [20.1, 41.0], [20.2, 42.0], [20.3, 42.0], [20.4, 42.0], [20.5, 42.0], [20.6, 42.0], [20.7, 45.0], [20.8, 45.0], [20.9, 45.0], [21.0, 45.0], [21.1, 45.0], [21.2, 45.0], [21.3, 60.0], [21.4, 60.0], [21.5, 60.0], [21.6, 60.0], [21.7, 60.0], [21.8, 60.0], [21.9, 90.0], [22.0, 90.0], [22.1, 90.0], [22.2, 90.0], [22.3, 90.0], [22.4, 90.0], [22.5, 199.0], [22.6, 199.0], [22.7, 199.0], [22.8, 199.0], [22.9, 199.0], [23.0, 225.0], [23.1, 225.0], [23.2, 225.0], [23.3, 225.0], [23.4, 225.0], [23.5, 225.0], [23.6, 254.0], [23.7, 254.0], [23.8, 254.0], [23.9, 254.0], [24.0, 254.0], [24.1, 254.0], [24.2, 271.0], [24.3, 271.0], [24.4, 271.0], [24.5, 271.0], [24.6, 271.0], [24.7, 271.0], [24.8, 278.0], [24.9, 278.0], [25.0, 278.0], [25.1, 278.0], [25.2, 278.0], [25.3, 352.0], [25.4, 352.0], [25.5, 352.0], [25.6, 352.0], [25.7, 352.0], [25.8, 352.0], [25.9, 366.0], [26.0, 366.0], [26.1, 366.0], [26.2, 366.0], [26.3, 366.0], [26.4, 366.0], [26.5, 372.0], [26.6, 372.0], [26.7, 372.0], [26.8, 372.0], [26.9, 372.0], [27.0, 372.0], [27.1, 387.0], [27.2, 387.0], [27.3, 387.0], [27.4, 387.0], [27.5, 387.0], [27.6, 400.0], [27.7, 400.0], [27.8, 400.0], [27.9, 400.0], [28.0, 400.0], [28.1, 400.0], [28.2, 404.0], [28.3, 404.0], [28.4, 404.0], [28.5, 404.0], [28.6, 404.0], [28.7, 404.0], [28.8, 407.0], [28.9, 407.0], [29.0, 407.0], [29.1, 407.0], [29.2, 407.0], [29.3, 407.0], [29.4, 1898.0], [29.5, 1898.0], [29.6, 1898.0], [29.7, 1898.0], [29.8, 1898.0], [29.9, 1912.0], [30.0, 1912.0], [30.1, 1912.0], [30.2, 1912.0], [30.3, 1912.0], [30.4, 1912.0], [30.5, 1914.0], [30.6, 1914.0], [30.7, 1914.0], [30.8, 1914.0], [30.9, 1914.0], [31.0, 1914.0], [31.1, 1917.0], [31.2, 1917.0], [31.3, 1917.0], [31.4, 1917.0], [31.5, 1917.0], [31.6, 1917.0], [31.7, 1970.0], [31.8, 1970.0], [31.9, 1970.0], [32.0, 1970.0], [32.1, 1970.0], [32.2, 1981.0], [32.3, 1981.0], [32.4, 1981.0], [32.5, 1981.0], [32.6, 1981.0], [32.7, 1981.0], [32.8, 2001.0], [32.9, 2001.0], [33.0, 2001.0], [33.1, 2001.0], [33.2, 2001.0], [33.3, 2001.0], [33.4, 2006.0], [33.5, 2006.0], [33.6, 2006.0], [33.7, 2006.0], [33.8, 2006.0], [33.9, 2006.0], [34.0, 2010.0], [34.1, 2010.0], [34.2, 2010.0], [34.3, 2010.0], [34.4, 2010.0], [34.5, 2019.0], [34.6, 2019.0], [34.7, 2019.0], [34.8, 2019.0], [34.9, 2019.0], [35.0, 2019.0], [35.1, 2034.0], [35.2, 2034.0], [35.3, 2034.0], [35.4, 2034.0], [35.5, 2034.0], [35.6, 2034.0], [35.7, 2046.0], [35.8, 2046.0], [35.9, 2046.0], [36.0, 2046.0], [36.1, 2046.0], [36.2, 2046.0], [36.3, 2226.0], [36.4, 2226.0], [36.5, 2226.0], [36.6, 2226.0], [36.7, 2226.0], [36.8, 2270.0], [36.9, 2270.0], [37.0, 2270.0], [37.1, 2270.0], [37.2, 2270.0], [37.3, 2270.0], [37.4, 2270.0], [37.5, 2270.0], [37.6, 2270.0], [37.7, 2270.0], [37.8, 2270.0], [37.9, 2270.0], [38.0, 2275.0], [38.1, 2275.0], [38.2, 2275.0], [38.3, 2275.0], [38.4, 2275.0], [38.5, 2275.0], [38.6, 2281.0], [38.7, 2281.0], [38.8, 2281.0], [38.9, 2281.0], [39.0, 2281.0], [39.1, 2288.0], [39.2, 2288.0], [39.3, 2288.0], [39.4, 2288.0], [39.5, 2288.0], [39.6, 2288.0], [39.7, 2299.0], [39.8, 2299.0], [39.9, 2299.0], [40.0, 2299.0], [40.1, 2299.0], [40.2, 2299.0], [40.3, 2321.0], [40.4, 2321.0], [40.5, 2321.0], [40.6, 2321.0], [40.7, 2321.0], [40.8, 2321.0], [40.9, 2322.0], [41.0, 2322.0], [41.1, 2322.0], [41.2, 2322.0], [41.3, 2322.0], [41.4, 2380.0], [41.5, 2380.0], [41.6, 2380.0], [41.7, 2380.0], [41.8, 2380.0], [41.9, 2380.0], [42.0, 2392.0], [42.1, 2392.0], [42.2, 2392.0], [42.3, 2392.0], [42.4, 2392.0], [42.5, 2392.0], [42.6, 2406.0], [42.7, 2406.0], [42.8, 2406.0], [42.9, 2406.0], [43.0, 2406.0], [43.1, 2406.0], [43.2, 2475.0], [43.3, 2475.0], [43.4, 2475.0], [43.5, 2475.0], [43.6, 2475.0], [43.7, 2491.0], [43.8, 2491.0], [43.9, 2491.0], [44.0, 2491.0], [44.1, 2491.0], [44.2, 2491.0], [44.3, 2549.0], [44.4, 2549.0], [44.5, 2549.0], [44.6, 2549.0], [44.7, 2549.0], [44.8, 2549.0], [44.9, 2550.0], [45.0, 2550.0], [45.1, 2550.0], [45.2, 2550.0], [45.3, 2550.0], [45.4, 2550.0], [45.5, 2557.0], [45.6, 2557.0], [45.7, 2557.0], [45.8, 2557.0], [45.9, 2557.0], [46.0, 2571.0], [46.1, 2571.0], [46.2, 2571.0], [46.3, 2571.0], [46.4, 2571.0], [46.5, 2571.0], [46.6, 2591.0], [46.7, 2591.0], [46.8, 2591.0], [46.9, 2591.0], [47.0, 2591.0], [47.1, 2591.0], [47.2, 2599.0], [47.3, 2599.0], [47.4, 2599.0], [47.5, 2599.0], [47.6, 2599.0], [47.7, 2599.0], [47.8, 2605.0], [47.9, 2605.0], [48.0, 2605.0], [48.1, 2605.0], [48.2, 2605.0], [48.3, 2607.0], [48.4, 2607.0], [48.5, 2607.0], [48.6, 2607.0], [48.7, 2607.0], [48.8, 2607.0], [48.9, 2608.0], [49.0, 2608.0], [49.1, 2608.0], [49.2, 2608.0], [49.3, 2608.0], [49.4, 2608.0], [49.5, 2614.0], [49.6, 2614.0], [49.7, 2614.0], [49.8, 2614.0], [49.9, 2614.0], [50.0, 2614.0], [50.1, 2641.0], [50.2, 2641.0], [50.3, 2641.0], [50.4, 2641.0], [50.5, 2641.0], [50.6, 2649.0], [50.7, 2649.0], [50.8, 2649.0], [50.9, 2649.0], [51.0, 2649.0], [51.1, 2649.0], [51.2, 2649.0], [51.3, 2649.0], [51.4, 2649.0], [51.5, 2649.0], [51.6, 2649.0], [51.7, 2649.0], [51.8, 2652.0], [51.9, 2652.0], [52.0, 2652.0], [52.1, 2652.0], [52.2, 2652.0], [52.3, 2662.0], [52.4, 2662.0], [52.5, 2662.0], [52.6, 2662.0], [52.7, 2662.0], [52.8, 2662.0], [52.9, 2667.0], [53.0, 2667.0], [53.1, 2667.0], [53.2, 2667.0], [53.3, 2667.0], [53.4, 2667.0], [53.5, 2718.0], [53.6, 2718.0], [53.7, 2718.0], [53.8, 2718.0], [53.9, 2718.0], [54.0, 2718.0], [54.1, 2728.0], [54.2, 2728.0], [54.3, 2728.0], [54.4, 2728.0], [54.5, 2728.0], [54.6, 2764.0], [54.7, 2764.0], [54.8, 2764.0], [54.9, 2764.0], [55.0, 2764.0], [55.1, 2764.0], [55.2, 2789.0], [55.3, 2789.0], [55.4, 2789.0], [55.5, 2789.0], [55.6, 2789.0], [55.7, 2789.0], [55.8, 2794.0], [55.9, 2794.0], [56.0, 2794.0], [56.1, 2794.0], [56.2, 2794.0], [56.3, 2794.0], [56.4, 2795.0], [56.5, 2795.0], [56.6, 2795.0], [56.7, 2795.0], [56.8, 2795.0], [56.9, 2806.0], [57.0, 2806.0], [57.1, 2806.0], [57.2, 2806.0], [57.3, 2806.0], [57.4, 2806.0], [57.5, 2847.0], [57.6, 2847.0], [57.7, 2847.0], [57.8, 2847.0], [57.9, 2847.0], [58.0, 2847.0], [58.1, 2847.0], [58.2, 2847.0], [58.3, 2847.0], [58.4, 2847.0], [58.5, 2847.0], [58.6, 2847.0], [58.7, 2853.0], [58.8, 2853.0], [58.9, 2853.0], [59.0, 2853.0], [59.1, 2853.0], [59.2, 2862.0], [59.3, 2862.0], [59.4, 2862.0], [59.5, 2862.0], [59.6, 2862.0], [59.7, 2862.0], [59.8, 2863.0], [59.9, 2863.0], [60.0, 2863.0], [60.1, 2863.0], [60.2, 2863.0], [60.3, 2863.0], [60.4, 2867.0], [60.5, 2867.0], [60.6, 2867.0], [60.7, 2867.0], [60.8, 2867.0], [60.9, 2867.0], [61.0, 2879.0], [61.1, 2879.0], [61.2, 2879.0], [61.3, 2879.0], [61.4, 2879.0], [61.5, 2880.0], [61.6, 2880.0], [61.7, 2880.0], [61.8, 2880.0], [61.9, 2880.0], [62.0, 2880.0], [62.1, 2886.0], [62.2, 2886.0], [62.3, 2886.0], [62.4, 2886.0], [62.5, 2886.0], [62.6, 2886.0], [62.7, 2903.0], [62.8, 2903.0], [62.9, 2903.0], [63.0, 2903.0], [63.1, 2903.0], [63.2, 2903.0], [63.3, 2911.0], [63.4, 2911.0], [63.5, 2911.0], [63.6, 2911.0], [63.7, 2911.0], [63.8, 2917.0], [63.9, 2917.0], [64.0, 2917.0], [64.1, 2917.0], [64.2, 2917.0], [64.3, 2917.0], [64.4, 2918.0], [64.5, 2918.0], [64.6, 2918.0], [64.7, 2918.0], [64.8, 2918.0], [64.9, 2918.0], [65.0, 2942.0], [65.1, 2942.0], [65.2, 2942.0], [65.3, 2942.0], [65.4, 2942.0], [65.5, 2942.0], [65.6, 2957.0], [65.7, 2957.0], [65.8, 2957.0], [65.9, 2957.0], [66.0, 2957.0], [66.1, 2961.0], [66.2, 2961.0], [66.3, 2961.0], [66.4, 2961.0], [66.5, 2961.0], [66.6, 2961.0], [66.7, 2975.0], [66.8, 2975.0], [66.9, 2975.0], [67.0, 2975.0], [67.1, 2975.0], [67.2, 2975.0], [67.3, 2975.0], [67.4, 2975.0], [67.5, 2975.0], [67.6, 2975.0], [67.7, 2975.0], [67.8, 2975.0], [67.9, 2991.0], [68.0, 2991.0], [68.1, 2991.0], [68.2, 2991.0], [68.3, 2991.0], [68.4, 2993.0], [68.5, 2993.0], [68.6, 2993.0], [68.7, 2993.0], [68.8, 2993.0], [68.9, 2993.0], [69.0, 2996.0], [69.1, 2996.0], [69.2, 2996.0], [69.3, 2996.0], [69.4, 2996.0], [69.5, 2996.0], [69.6, 3010.0], [69.7, 3010.0], [69.8, 3010.0], [69.9, 3010.0], [70.0, 3010.0], [70.1, 3010.0], [70.2, 3019.0], [70.3, 3019.0], [70.4, 3019.0], [70.5, 3019.0], [70.6, 3019.0], [70.7, 3032.0], [70.8, 3032.0], [70.9, 3032.0], [71.0, 3032.0], [71.1, 3032.0], [71.2, 3032.0], [71.3, 3035.0], [71.4, 3035.0], [71.5, 3035.0], [71.6, 3035.0], [71.7, 3035.0], [71.8, 3035.0], [71.9, 3074.0], [72.0, 3074.0], [72.1, 3074.0], [72.2, 3074.0], [72.3, 3074.0], [72.4, 3074.0], [72.5, 3077.0], [72.6, 3077.0], [72.7, 3077.0], [72.8, 3077.0], [72.9, 3077.0], [73.0, 3084.0], [73.1, 3084.0], [73.2, 3084.0], [73.3, 3084.0], [73.4, 3084.0], [73.5, 3084.0], [73.6, 3115.0], [73.7, 3115.0], [73.8, 3115.0], [73.9, 3115.0], [74.0, 3115.0], [74.1, 3115.0], [74.2, 3119.0], [74.3, 3119.0], [74.4, 3119.0], [74.5, 3119.0], [74.6, 3119.0], [74.7, 3119.0], [74.8, 3161.0], [74.9, 3161.0], [75.0, 3161.0], [75.1, 3161.0], [75.2, 3161.0], [75.3, 3164.0], [75.4, 3164.0], [75.5, 3164.0], [75.6, 3164.0], [75.7, 3164.0], [75.8, 3164.0], [75.9, 3176.0], [76.0, 3176.0], [76.1, 3176.0], [76.2, 3176.0], [76.3, 3176.0], [76.4, 3176.0], [76.5, 3177.0], [76.6, 3177.0], [76.7, 3177.0], [76.8, 3177.0], [76.9, 3177.0], [77.0, 3177.0], [77.1, 3178.0], [77.2, 3178.0], [77.3, 3178.0], [77.4, 3178.0], [77.5, 3178.0], [77.6, 3186.0], [77.7, 3186.0], [77.8, 3186.0], [77.9, 3186.0], [78.0, 3186.0], [78.1, 3186.0], [78.2, 3219.0], [78.3, 3219.0], [78.4, 3219.0], [78.5, 3219.0], [78.6, 3219.0], [78.7, 3219.0], [78.8, 3224.0], [78.9, 3224.0], [79.0, 3224.0], [79.1, 3224.0], [79.2, 3224.0], [79.3, 3224.0], [79.4, 3248.0], [79.5, 3248.0], [79.6, 3248.0], [79.7, 3248.0], [79.8, 3248.0], [79.9, 3333.0], [80.0, 3333.0], [80.1, 3333.0], [80.2, 3333.0], [80.3, 3333.0], [80.4, 3333.0], [80.5, 3335.0], [80.6, 3335.0], [80.7, 3335.0], [80.8, 3335.0], [80.9, 3335.0], [81.0, 3335.0], [81.1, 3347.0], [81.2, 3347.0], [81.3, 3347.0], [81.4, 3347.0], [81.5, 3347.0], [81.6, 3347.0], [81.7, 3349.0], [81.8, 3349.0], [81.9, 3349.0], [82.0, 3349.0], [82.1, 3349.0], [82.2, 3375.0], [82.3, 3375.0], [82.4, 3375.0], [82.5, 3375.0], [82.6, 3375.0], [82.7, 3375.0], [82.8, 3403.0], [82.9, 3403.0], [83.0, 3403.0], [83.1, 3403.0], [83.2, 3403.0], [83.3, 3403.0], [83.4, 3404.0], [83.5, 3404.0], [83.6, 3404.0], [83.7, 3404.0], [83.8, 3404.0], [83.9, 3404.0], [84.0, 3418.0], [84.1, 3418.0], [84.2, 3418.0], [84.3, 3418.0], [84.4, 3418.0], [84.5, 3453.0], [84.6, 3453.0], [84.7, 3453.0], [84.8, 3453.0], [84.9, 3453.0], [85.0, 3453.0], [85.1, 3460.0], [85.2, 3460.0], [85.3, 3460.0], [85.4, 3460.0], [85.5, 3460.0], [85.6, 3460.0], [85.7, 3467.0], [85.8, 3467.0], [85.9, 3467.0], [86.0, 3467.0], [86.1, 3467.0], [86.2, 3467.0], [86.3, 3472.0], [86.4, 3472.0], [86.5, 3472.0], [86.6, 3472.0], [86.7, 3472.0], [86.8, 3481.0], [86.9, 3481.0], [87.0, 3481.0], [87.1, 3481.0], [87.2, 3481.0], [87.3, 3481.0], [87.4, 3506.0], [87.5, 3506.0], [87.6, 3506.0], [87.7, 3506.0], [87.8, 3506.0], [87.9, 3506.0], [88.0, 3519.0], [88.1, 3519.0], [88.2, 3519.0], [88.3, 3519.0], [88.4, 3519.0], [88.5, 3519.0], [88.6, 3532.0], [88.7, 3532.0], [88.8, 3532.0], [88.9, 3532.0], [89.0, 3532.0], [89.1, 3542.0], [89.2, 3542.0], [89.3, 3542.0], [89.4, 3542.0], [89.5, 3542.0], [89.6, 3542.0], [89.7, 3543.0], [89.8, 3543.0], [89.9, 3543.0], [90.0, 3543.0], [90.1, 3543.0], [90.2, 3543.0], [90.3, 3551.0], [90.4, 3551.0], [90.5, 3551.0], [90.6, 3551.0], [90.7, 3551.0], [90.8, 3551.0], [90.9, 3557.0], [91.0, 3557.0], [91.1, 3557.0], [91.2, 3557.0], [91.3, 3557.0], [91.4, 3567.0], [91.5, 3567.0], [91.6, 3567.0], [91.7, 3567.0], [91.8, 3567.0], [91.9, 3567.0], [92.0, 3603.0], [92.1, 3603.0], [92.2, 3603.0], [92.3, 3603.0], [92.4, 3603.0], [92.5, 3603.0], [92.6, 3616.0], [92.7, 3616.0], [92.8, 3616.0], [92.9, 3616.0], [93.0, 3616.0], [93.1, 3616.0], [93.2, 3686.0], [93.3, 3686.0], [93.4, 3686.0], [93.5, 3686.0], [93.6, 3686.0], [93.7, 3691.0], [93.8, 3691.0], [93.9, 3691.0], [94.0, 3691.0], [94.1, 3691.0], [94.2, 3691.0], [94.3, 3707.0], [94.4, 3707.0], [94.5, 3707.0], [94.6, 3707.0], [94.7, 3707.0], [94.8, 3707.0], [94.9, 3730.0], [95.0, 3730.0], [95.1, 3730.0], [95.2, 3730.0], [95.3, 3730.0], [95.4, 3730.0], [95.5, 3798.0], [95.6, 3798.0], [95.7, 3798.0], [95.8, 3798.0], [95.9, 3798.0], [96.0, 3827.0], [96.1, 3827.0], [96.2, 3827.0], [96.3, 3827.0], [96.4, 3827.0], [96.5, 3827.0], [96.6, 7287.0], [96.7, 7287.0], [96.8, 7287.0], [96.9, 7287.0], [97.0, 7287.0], [97.1, 7287.0], [97.2, 7671.0], [97.3, 7671.0], [97.4, 7671.0], [97.5, 7671.0], [97.6, 7671.0], [97.7, 7671.0], [97.8, 8538.0], [97.9, 8538.0], [98.0, 8538.0], [98.1, 8538.0], [98.2, 8538.0], [98.3, 11004.0], [98.4, 11004.0], [98.5, 11004.0], [98.6, 11004.0], [98.7, 11004.0], [98.8, 11004.0], [98.9, 12805.0], [99.0, 12805.0], [99.1, 12805.0], [99.2, 12805.0], [99.3, 12805.0], [99.4, 12805.0], [99.5, 14032.0], [99.6, 14032.0], [99.7, 14032.0], [99.8, 14032.0], [99.9, 14032.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 91.0, "series": [{"data": [[600.0, 6.0], [700.0, 9.0], [11800.0, 1.0], [12300.0, 1.0], [12600.0, 1.0], [800.0, 11.0], [13200.0, 2.0], [13100.0, 1.0], [13600.0, 1.0], [13700.0, 1.0], [900.0, 10.0], [1000.0, 6.0], [1100.0, 14.0], [1200.0, 11.0], [1300.0, 5.0], [1400.0, 3.0], [1500.0, 1.0], [100.0, 91.0], [1600.0, 1.0], [1700.0, 4.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 3.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 1.0], [2400.0, 10.0], [2500.0, 18.0], [2600.0, 19.0], [2700.0, 19.0], [2800.0, 8.0], [2900.0, 12.0], [3000.0, 9.0], [3100.0, 4.0], [200.0, 6.0], [3200.0, 2.0], [400.0, 3.0], [500.0, 1.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 89.0], [600.0, 2.0], [700.0, 3.0], [800.0, 1.0], [1200.0, 2.0], [1300.0, 3.0], [1400.0, 1.0], [1500.0, 3.0], [1600.0, 4.0], [1700.0, 2.0], [1800.0, 6.0], [1900.0, 1.0], [2000.0, 3.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 2.0], [2400.0, 12.0], [2500.0, 12.0], [2600.0, 7.0], [2800.0, 7.0], [2700.0, 3.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 2.0], [3300.0, 1.0], [3400.0, 3.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 3.0], [3800.0, 1.0], [3900.0, 3.0], [4000.0, 1.0], [4300.0, 1.0], [4800.0, 3.0], [4700.0, 3.0], [4900.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [5600.0, 3.0], [5700.0, 6.0], [5800.0, 11.0], [5900.0, 10.0], [6000.0, 12.0], [6100.0, 10.0], [6200.0, 6.0], [6300.0, 10.0], [6400.0, 6.0], [6500.0, 7.0], [6600.0, 7.0], [6700.0, 3.0], [6800.0, 1.0], [10700.0, 2.0], [10800.0, 1.0], [11500.0, 1.0], [12100.0, 1.0], [13100.0, 1.0], [13300.0, 1.0], [14200.0, 1.0], [14800.0, 1.0], [14600.0, 1.0], [400.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[600.0, 1.0], [10400.0, 1.0], [700.0, 2.0], [11700.0, 1.0], [12700.0, 1.0], [800.0, 8.0], [12900.0, 1.0], [900.0, 3.0], [1000.0, 2.0], [1200.0, 4.0], [1300.0, 3.0], [1400.0, 4.0], [1500.0, 2.0], [1600.0, 4.0], [1700.0, 4.0], [1800.0, 6.0], [1900.0, 2.0], [2000.0, 4.0], [2100.0, 2.0], [2300.0, 2.0], [2400.0, 8.0], [2500.0, 2.0], [2600.0, 3.0], [2700.0, 2.0], [2800.0, 8.0], [2900.0, 10.0], [3000.0, 8.0], [3100.0, 16.0], [3200.0, 10.0], [3300.0, 7.0], [200.0, 2.0], [3400.0, 11.0], [3500.0, 9.0], [3600.0, 4.0], [3700.0, 4.0], [3800.0, 6.0], [3900.0, 1.0], [300.0, 1.0], [400.0, 4.0], [500.0, 1.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 39.0], [8500.0, 1.0], [11000.0, 1.0], [12800.0, 1.0], [14000.0, 1.0], [100.0, 1.0], [1800.0, 1.0], [1900.0, 5.0], [2000.0, 6.0], [2200.0, 7.0], [2300.0, 4.0], [2400.0, 3.0], [2500.0, 6.0], [2600.0, 10.0], [2700.0, 6.0], [2800.0, 10.0], [2900.0, 12.0], [3000.0, 7.0], [3100.0, 8.0], [3200.0, 3.0], [3300.0, 5.0], [200.0, 4.0], [3400.0, 8.0], [3500.0, 8.0], [3700.0, 3.0], [3600.0, 4.0], [3800.0, 1.0], [300.0, 4.0], [400.0, 3.0], [7200.0, 1.0], [7600.0, 1.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 513.0, "series": [{"data": [[0.0, 23.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 111.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 513.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 301.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 116.44409282700431, "minX": 1.64330754E12, "maxY": 116.44409282700431, "series": [{"data": [[1.64330754E12, 116.44409282700431]], "isOverall": false, "label": "CDI-J&J", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330754E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 14881.0, "series": [{"data": [[9.0, 11887.0], [10.0, 12630.0], [12.0, 13288.0], [14.0, 13100.0], [18.0, 13254.5], [74.0, 999.0], [75.0, 868.0], [73.0, 758.0], [79.0, 1069.0], [80.0, 901.0], [81.0, 728.2857142857142], [82.0, 974.5], [83.0, 714.0], [84.0, 1163.5], [85.0, 1223.0], [86.0, 1175.0], [87.0, 1299.0], [89.0, 1033.3333333333333], [90.0, 943.0], [91.0, 1373.3333333333333], [93.0, 1263.0], [95.0, 892.0], [96.0, 844.0], [98.0, 1063.0], [100.0, 1354.0], [101.0, 943.4], [102.0, 1076.0], [103.0, 1171.0], [105.0, 730.0], [106.0, 1273.0], [108.0, 906.5], [109.0, 774.0], [110.0, 812.6666666666666], [111.0, 2143.5714285714284], [112.0, 1728.5], [113.0, 2118.5714285714284], [114.0, 1751.0], [115.0, 2305.6], [117.0, 844.0], [118.0, 1934.3333333333333], [119.0, 2633.0], [116.0, 2707.5], [121.0, 1665.5], [120.0, 2527.0], [126.0, 2562.0], [125.0, 2528.6666666666665], [135.0, 2681.8], [131.0, 2548.0], [137.0, 1064.0], [141.0, 1093.0], [143.0, 2971.0], [142.0, 3158.0], [138.0, 2763.5], [144.0, 1195.0], [145.0, 1177.0], [146.0, 1156.0], [149.0, 2170.0], [150.0, 2613.75], [151.0, 3172.6666666666665], [148.0, 2886.6666666666665], [153.0, 2364.0], [154.0, 1238.0], [155.0, 1240.0], [157.0, 2050.0], [159.0, 1067.6666666666665], [156.0, 3031.5], [161.0, 1103.0], [160.0, 2396.4], [162.0, 861.3333333333334], [164.0, 137.6], [163.0, 603.4545454545455], [167.0, 897.1333333333333], [166.0, 1410.25], [165.0, 378.5555555555556], [168.0, 1258.076923076923], [169.0, 1214.2857142857142], [170.0, 1460.0], [171.0, 1459.3333333333333], [172.0, 1484.0], [173.0, 1960.6666666666665], [174.0, 1885.6666666666667]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[138.23666666666662, 1678.4833333333331]], "isOverall": false, "label": "Login-page-Aggregated", "isController": false}, {"data": [[2.0, 11550.0], [3.0, 10760.0], [4.0, 464.0], [5.0, 12179.0], [6.0, 10819.0], [7.0, 14253.0], [8.0, 529.0], [9.0, 14660.0], [10.0, 14881.0], [11.0, 743.0], [12.0, 801.0], [13.0, 688.0], [14.0, 13304.0], [15.0, 13110.0], [16.0, 664.0], [18.0, 772.0], [19.0, 5781.0], [20.0, 5906.0], [21.0, 5739.0], [22.0, 5753.0], [23.0, 5766.0], [24.0, 6123.0], [25.0, 5826.0], [26.0, 5607.0], [27.0, 5899.0], [29.0, 5817.0], [30.0, 5822.0], [31.0, 5851.0], [33.0, 5826.0], [32.0, 5784.0], [35.0, 5911.0], [34.0, 5864.0], [37.0, 5862.0], [36.0, 6190.0], [39.0, 5764.5], [41.0, 5933.0], [40.0, 5997.0], [43.0, 5867.0], [42.0, 5838.0], [44.0, 5980.0], [47.0, 5941.0], [46.0, 6192.0], [49.0, 6260.5], [51.0, 6101.0], [50.0, 6148.0], [53.0, 6217.0], [52.0, 6186.0], [55.0, 5820.0], [54.0, 6064.0], [56.0, 6046.0], [59.0, 6002.0], [58.0, 6287.0], [61.0, 6097.0], [60.0, 6315.0], [63.0, 6316.0], [62.0, 6759.0], [67.0, 6041.0], [66.0, 6509.0], [65.0, 6364.0], [64.0, 6366.0], [71.0, 6430.0], [70.0, 6333.0], [68.0, 6670.0], [75.0, 6611.333333333333], [72.0, 6622.0], [79.0, 6461.0], [78.0, 6310.0], [77.0, 6874.0], [76.0, 6570.0], [83.0, 6623.0], [82.0, 6643.0], [81.0, 6420.0], [80.0, 6444.0], [87.0, 6711.0], [86.0, 6472.0], [85.0, 6576.0], [84.0, 6668.0], [91.0, 6266.0], [90.0, 6338.0], [89.0, 6371.0], [88.0, 6600.0], [95.0, 6101.0], [94.0, 6533.0], [93.0, 6124.0], [92.0, 5920.0], [99.0, 6152.0], [98.0, 6334.0], [97.0, 6061.0], [96.0, 6032.0], [103.0, 6331.0], [102.0, 6289.0], [101.0, 6490.0], [100.0, 5986.0], [107.0, 6121.0], [106.0, 6114.0], [105.0, 6076.0], [104.0, 6230.0], [111.0, 2610.0], [110.0, 5783.0], [109.0, 5964.0], [108.0, 6066.0], [115.0, 2478.0], [114.0, 2548.0], [113.0, 2519.0], [112.0, 2534.0], [119.0, 5145.0], [118.0, 2508.0], [117.0, 2472.0], [116.0, 2588.0], [123.0, 2488.0], [122.0, 2402.0], [121.0, 5016.0], [120.0, 2705.0], [127.0, 2503.0], [126.0, 2453.0], [125.0, 4986.0], [124.0, 2502.0], [135.0, 2933.0], [134.0, 4738.0], [133.0, 4860.0], [132.0, 2548.0], [131.0, 2532.0], [130.0, 2453.0], [129.0, 2426.0], [128.0, 2593.0], [143.0, 3113.0], [142.0, 4792.0], [141.0, 3763.0], [139.0, 2803.0], [138.0, 2652.0], [137.0, 2691.0], [136.0, 2662.0], [151.0, 3052.0], [150.0, 2840.0], [149.0, 3121.0], [148.0, 4858.0], [147.0, 2995.0], [146.0, 3820.0], [144.0, 2850.0], [159.0, 3990.0], [158.0, 4021.0], [157.0, 2841.0], [156.0, 2884.0], [155.0, 2773.0], [154.0, 2933.0], [153.0, 3041.0], [152.0, 4389.0], [161.0, 1761.0], [160.0, 975.25], [163.0, 1043.1052631578946], [164.0, 572.375], [162.0, 799.5], [167.0, 917.1176470588235], [166.0, 1206.9230769230767], [165.0, 327.1666666666667], [168.0, 971.2857142857142], [169.0, 666.0], [170.0, 35.00000000000001], [172.0, 954.5], [171.0, 3641.5], [173.0, 946.2500000000001], [174.0, 28.0], [1.0, 10739.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[120.45333333333322, 3274.806666666665]], "isOverall": false, "label": "Home-Aggregated", "isController": false}, {"data": [[2.0, 3011.0], [3.0, 3089.0], [4.0, 265.0], [5.0, 11791.0], [6.0, 10447.0], [7.0, 3248.0], [8.0, 251.0], [9.0, 1854.0], [10.0, 848.0], [11.0, 335.0], [12.0, 401.0], [13.0, 434.0], [14.0, 12937.0], [15.0, 12705.0], [16.0, 438.0], [18.0, 460.5], [19.0, 3869.0], [20.0, 3936.0], [21.0, 3840.0], [22.0, 3718.0], [23.0, 3760.0], [24.0, 3572.0], [25.0, 3807.0], [26.0, 3689.0], [27.0, 3897.0], [29.0, 3725.0], [30.0, 3841.0], [31.0, 3840.0], [33.0, 3550.0], [32.0, 3737.0], [35.0, 3531.0], [34.0, 3458.0], [37.0, 3539.0], [36.0, 3584.0], [39.0, 3453.5], [41.0, 3663.0], [40.0, 3521.0], [43.0, 3641.0], [42.0, 3549.0], [44.0, 3488.0], [47.0, 3334.0], [46.0, 3456.0], [49.0, 3267.5], [51.0, 3510.0], [50.0, 3499.0], [53.0, 3305.0], [52.0, 3022.0], [55.0, 3428.0], [54.0, 3336.0], [56.0, 3489.0], [59.0, 3431.0], [58.0, 3190.0], [61.0, 3178.0], [60.0, 3238.0], [63.0, 3341.0], [62.0, 3201.0], [67.0, 3161.0], [66.0, 3104.0], [65.0, 3406.0], [64.0, 3424.0], [71.0, 3094.0], [70.0, 3107.5], [68.0, 3197.0], [75.0, 3032.6666666666665], [72.0, 3168.0], [79.0, 3043.0], [78.0, 2962.0], [77.0, 3182.0], [76.0, 3103.0], [83.0, 3142.0], [82.0, 2936.0], [81.0, 2914.0], [80.0, 2911.0], [87.0, 2883.0], [86.0, 2929.0], [85.0, 2890.0], [84.0, 2937.0], [91.0, 2890.0], [90.0, 2878.0], [89.0, 2852.0], [88.0, 2801.0], [95.0, 2751.0], [94.0, 3130.0], [93.0, 2945.0], [92.0, 2672.0], [99.0, 3284.0], [98.0, 3259.0], [97.0, 2837.0], [96.0, 2845.0], [103.0, 3211.0], [102.0, 3112.0], [101.0, 3374.0], [100.0, 3190.0], [107.0, 3127.0], [106.0, 3118.0], [105.0, 3065.0], [104.0, 3210.0], [110.0, 2921.0], [109.0, 3157.0], [108.0, 3212.0], [119.0, 2495.0], [121.0, 2416.0], [125.0, 2436.0], [134.0, 2020.0], [133.0, 2071.0], [142.0, 1572.0], [141.0, 1669.0], [148.0, 1314.0], [146.0, 1762.0], [159.0, 954.0], [158.0, 1059.0], [152.0, 1304.0], [160.0, 1257.6666666666667], [161.0, 1119.0], [164.0, 1419.0], [163.0, 1741.2727272727273], [167.0, 1851.3333333333333], [165.0, 1759.0], [162.0, 1600.0], [166.0, 2106.6666666666665], [168.0, 1587.0], [169.0, 2502.0], [171.0, 818.5], [173.0, 845.0], [172.0, 827.0], [1.0, 3451.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[94.20114942528738, 2733.137931034483]], "isOverall": false, "label": "Home-0-Aggregated", "isController": false}, {"data": [[2.0, 8538.0], [3.0, 7671.0], [4.0, 199.0], [5.0, 387.0], [6.0, 372.0], [7.0, 11004.0], [8.0, 278.0], [9.0, 12805.0], [10.0, 14032.0], [11.0, 407.0], [12.0, 400.0], [13.0, 254.0], [14.0, 366.0], [15.0, 404.0], [16.0, 225.0], [18.0, 311.5], [19.0, 1912.0], [20.0, 1970.0], [21.0, 1898.0], [22.0, 2034.0], [23.0, 2006.0], [24.0, 2550.0], [25.0, 2019.0], [26.0, 1917.0], [27.0, 2001.0], [29.0, 2092.0], [30.0, 1981.0], [31.0, 2010.0], [33.0, 2275.0], [32.0, 2046.0], [35.0, 2380.0], [34.0, 2406.0], [37.0, 2322.0], [36.0, 2605.0], [39.0, 2310.0], [41.0, 2270.0], [40.0, 2475.0], [43.0, 2226.0], [42.0, 2288.0], [44.0, 2491.0], [47.0, 2607.0], [46.0, 2735.5], [49.0, 2992.5], [51.0, 2591.0], [50.0, 2649.0], [53.0, 2911.0], [52.0, 3164.0], [55.0, 2392.0], [54.0, 2728.0], [56.0, 2557.0], [59.0, 2571.0], [58.0, 3096.5], [61.0, 2918.0], [60.0, 3077.0], [63.0, 2975.0], [62.0, 3557.0], [67.0, 2879.0], [66.0, 3404.0], [65.0, 2957.0], [64.0, 2942.0], [71.0, 3335.0], [70.0, 3225.0], [68.0, 3472.0], [75.0, 3578.0], [72.0, 3453.0], [79.0, 3418.0], [78.0, 3347.0], [77.0, 3691.0], [76.0, 3467.0], [83.0, 3481.0], [82.0, 3707.0], [81.0, 3506.0], [80.0, 3532.0], [87.0, 3827.0], [86.0, 3542.0], [85.0, 3686.0], [84.0, 3730.0], [91.0, 3375.0], [90.0, 3460.0], [89.0, 3519.0], [88.0, 3798.0], [95.0, 3349.0], [94.0, 3403.0], [93.0, 3178.0], [92.0, 3248.0], [99.0, 2867.0], [98.0, 3074.0], [97.0, 3224.0], [96.0, 3186.0], [103.0, 3119.0], [102.0, 3176.0], [101.0, 3115.0], [100.0, 2795.0], [107.0, 2993.0], [106.0, 2996.0], [105.0, 3010.0], [104.0, 3019.0], [110.0, 2862.0], [109.0, 2806.0], [108.0, 2853.0], [119.0, 2649.0], [121.0, 2599.0], [125.0, 2549.0], [134.0, 2718.0], [133.0, 2789.0], [142.0, 3219.0], [141.0, 3177.0], [148.0, 3543.0], [146.0, 2991.0], [159.0, 3035.0], [158.0, 2961.0], [152.0, 3084.0], [160.0, 30.0], [161.0, 1508.0], [164.0, 756.25], [163.0, 33.90909090909091], [167.0, 686.75], [165.0, 37.0], [162.0, 986.0], [166.0, 471.33333333333337], [168.0, 1045.6], [169.0, 60.0], [171.0, 2822.0], [173.0, 2847.0], [172.0, 2886.0], [1.0, 7287.0]], "isOverall": false, "label": "Home-1", "isController": false}, {"data": [[94.20114942528738, 2321.9310344827572]], "isOverall": false, "label": "Home-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 174.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 10245.3, "minX": 1.64330754E12, "maxY": 570858.9666666667, "series": [{"data": [[1.64330754E12, 570858.9666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64330754E12, 10245.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330754E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1678.4833333333331, "minX": 1.64330754E12, "maxY": 3274.806666666665, "series": [{"data": [[1.64330754E12, 1678.4833333333331]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330754E12, 3274.806666666665]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330754E12, 2733.137931034483]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330754E12, 2321.9310344827572]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330754E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1670.3300000000002, "minX": 1.64330754E12, "maxY": 2733.109195402299, "series": [{"data": [[1.64330754E12, 1670.3300000000002]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330754E12, 1921.16]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330754E12, 2733.109195402299]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330754E12, 2258.8505747126433]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330754E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64330754E12, "maxY": 212.05333333333334, "series": [{"data": [[1.64330754E12, 212.05333333333334]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330754E12, 0.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330754E12, 0.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330754E12, 0.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330754E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 199.0, "minX": 1.64330754E12, "maxY": 14881.0, "series": [{"data": [[1.64330754E12, 14881.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64330754E12, 6270.000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64330754E12, 13489.119999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64330754E12, 6692.800000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64330754E12, 199.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64330754E12, 2880.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330754E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 38.5, "minX": 11.0, "maxY": 11119.0, "series": [{"data": [[131.0, 2818.0], [34.0, 3679.0], [39.0, 3177.0], [161.0, 2230.5], [11.0, 664.0], [14.0, 11119.0], [59.0, 3840.0], [60.0, 3120.0], [67.0, 2655.0], [68.0, 933.5], [70.0, 4470.0], [17.0, 7671.0], [18.0, 886.5], [24.0, 2020.0], [26.0, 3441.0], [119.0, 1469.5], [30.0, 2911.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[131.0, 38.5], [67.0, 2520.0], [161.0, 126.0], [119.0, 139.0], [60.0, 2885.5], [30.0, 2534.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 161.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 38.5, "minX": 11.0, "maxY": 3535.0, "series": [{"data": [[131.0, 2704.0], [34.0, 3535.0], [39.0, 3118.0], [161.0, 2170.5], [11.0, 434.0], [14.0, 1351.0], [59.0, 3238.0], [60.0, 3047.0], [67.0, 2599.0], [68.0, 927.0], [70.0, 3079.5], [17.0, 3089.0], [18.0, 874.0], [24.0, 1950.5], [26.0, 3334.5], [119.0, 1469.5], [30.0, 2911.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[131.0, 38.5], [67.0, 2491.0], [161.0, 126.0], [119.0, 138.0], [60.0, 2813.0], [30.0, 2507.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 161.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 15.8, "minX": 1.64330754E12, "maxY": 15.8, "series": [{"data": [[1.64330754E12, 15.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330754E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.6166666666666667, "minX": 1.64330754E12, "maxY": 7.883333333333334, "series": [{"data": [[1.64330754E12, 7.883333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64330754E12, 2.9]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.64330754E12, 4.4]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.64330754E12, 0.6166666666666667]], "isOverall": false, "label": "419", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330754E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.65, "minX": 1.64330754E12, "maxY": 3.3833333333333333, "series": [{"data": [[1.64330754E12, 0.65]], "isOverall": false, "label": "Home-1-failure", "isController": false}, {"data": [[1.64330754E12, 2.25]], "isOverall": false, "label": "Home-1-success", "isController": false}, {"data": [[1.64330754E12, 1.6166666666666667]], "isOverall": false, "label": "Login-page-failure", "isController": false}, {"data": [[1.64330754E12, 3.3833333333333333]], "isOverall": false, "label": "Login-page-success", "isController": false}, {"data": [[1.64330754E12, 2.75]], "isOverall": false, "label": "Home-failure", "isController": false}, {"data": [[1.64330754E12, 2.25]], "isOverall": false, "label": "Home-success", "isController": false}, {"data": [[1.64330754E12, 2.9]], "isOverall": false, "label": "Home-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330754E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 5.016666666666667, "minX": 1.64330754E12, "maxY": 10.783333333333333, "series": [{"data": [[1.64330754E12, 10.783333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64330754E12, 5.016666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330754E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

